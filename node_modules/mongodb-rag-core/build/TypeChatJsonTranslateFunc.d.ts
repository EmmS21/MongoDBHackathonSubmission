export interface AzureOpenAiServiceConfig {
    apiKey: string;
    baseUrl: string;
    deployment: string;
    version: string;
}
export type MakeTypeChatJsonTranslateFuncArgs = {
    /**
      The name of the TypeChat schema or interface.
     */
    schemaName: string;
    /**
      The text of a .d.ts that would inform the schema.
     */
    schema: string;
    /**
      Settings for using the Azure service.
     */
    azureOpenAiServiceConfig: AzureOpenAiServiceConfig;
    /**
      Number of times to retry the query preprocessor if it fails.
     */
    numRetries?: number;
    /**
      Delay between retries in milliseconds.
     */
    retryDelayMs?: number;
};
export declare function makeTypeChatJsonTranslateFunc<SchemaType extends object>({ azureOpenAiServiceConfig, schema, schemaName, numRetries, retryDelayMs, }: MakeTypeChatJsonTranslateFuncArgs): (prompt: string) => Promise<SchemaType>;
//# sourceMappingURL=TypeChatJsonTranslateFunc.d.ts.map