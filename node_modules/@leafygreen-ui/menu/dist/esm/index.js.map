{"version":3,"file":"index.js","sources":["../../src/MenuContext/MenuContext.tsx","../../src/MenuSeparator/MenuSeparator.styles.ts","../../src/MenuSeparator/MenuSeparator.tsx","../../src/Menu/Menu.tsx","../../src/MenuItem/FocusableMenuItem.tsx","../../src/types.ts","../../src/styles.ts","../../src/MenuItem/MenuItem.styles.ts","../../src/SubMenu/SubMenu.styles.ts","../../src/MenuItem/MenuItem.types.ts","../../src/MenuItem/MenuItem.tsx","../../src/SubMenu/SubMenu.tsx"],"sourcesContent":["import { createContext } from 'react';\n\nimport { MenuData } from './MenuContext.types';\n\nexport const MenuContext = createContext<MenuData>({\n  theme: 'light',\n  darkMode: false,\n});\n\nexport default MenuContext;\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const borderStyle = css`\n  height: 16px;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    height: 1px;\n    width: 100%;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const borderThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &::before {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n  [Theme.Dark]: css`\n    &::before {\n      background-color: ${palette.gray.light1};\n    }\n  `,\n};\n","import React, { useContext } from 'react';\n\nimport { cx } from '@leafygreen-ui/emotion';\n\nimport { MenuContext } from '../MenuContext';\n\nimport { borderStyle, borderThemeStyle } from './MenuSeparator.styles';\n\ninterface MenuSeparatorProps {\n  /**\n   * className applied to `MenuSeparator` li\n   */\n  className?: string;\n}\n\nexport function MenuSeparator({ className }: MenuSeparatorProps) {\n  const { theme } = useContext(MenuContext);\n  return (\n    <li\n      role=\"separator\"\n      className={cx(borderStyle, borderThemeStyle[theme], className)}\n    />\n  );\n}\n\nMenuSeparator.displayName = 'MenuSeparator';\n\nexport default MenuSeparator;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport isUndefined from 'lodash/isUndefined';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport {\n  useAvailableSpace,\n  useBackdropClick,\n  useEventListener,\n  useForceRerender,\n} from '@leafygreen-ui/hooks';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { isComponentType, keyMap, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport Popover, { Align, Justify } from '@leafygreen-ui/popover';\n\nimport { MenuContext } from '../MenuContext/MenuContext';\nimport MenuSeparator from '../MenuSeparator/MenuSeparator';\nimport { type SubMenuProps } from '../SubMenu/';\n\nimport { MenuProps, type SubMenuType } from './Menu.types';\n\nconst rootMenuStyle = css`\n  width: 210px;\n  border-radius: 12px;\n  overflow: auto;\n  padding: 14px 0;\n`;\n\nconst rootMenuThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.black};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.light2};\n  `,\n};\n\nconst scrollContainerStyle = css`\n  overflow: auto;\n  list-style: none;\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  padding-inline-start: 0px;\n  padding: 0px;\n`;\n\n/**\n *\n * Menus are used when a user needs to take an action.\n *\n * In a menu a user takes an action (like copy/delete a property or navigate to a different section/screen).\n *\n * @param props.children Content to appear inside of Menu.\n * @param props.open Boolean to describe whether or not Menu is open.\n * @param props.setOpen Callback to change the open state of the Menu.\n * @param props.shouldClose Callback to determine whether or not Menu should close when user tries to close it.\n * @param props.className Classname applied to Menu.\n * @param props.align Alignment of Menu relative to another element: `top`, `bottom`, `left`, `right`.\n * @param props.justify Justification of Menu relative to another element: `start`, `middle`, `end`.\n * @param props.refEl Reference element that Menu should be positioned against.\n * @param props.usePortal Boolean to describe if content should be portaled to end of DOM, or appear in DOM tree.\n * @param props.trigger Trigger element can be ReactNode or function, and, if present, internally manages active state of Menu.\n * @param props.darkMode Determines whether or not the component will be rendered in dark theme.\n */\nexport const Menu = React.forwardRef<HTMLDivElement, MenuProps>(function Menu(\n  {\n    align = Align.Bottom,\n    justify = Justify.End,\n    adjustOnMutation = false,\n    shouldClose = () => true,\n    spacing = 6,\n    maxHeight = 344,\n    usePortal = true,\n    open: controlledOpen,\n    setOpen: controlledSetOpen,\n    darkMode: darkModeProp,\n    children,\n    className,\n    refEl,\n    trigger,\n    portalClassName,\n    portalContainer,\n    scrollContainer,\n    popoverZIndex,\n    ...rest\n  }: MenuProps,\n  forwardRef,\n) {\n  const { theme, darkMode } = useDarkMode(darkModeProp);\n\n  const hasSetInitialFocus = useRef(false);\n  const hasSetInitialOpen = useRef(false);\n\n  const [, setClosed] = useState(false);\n  const currentSubMenuRef = useRef<SubMenuType | null>(null);\n  const [uncontrolledOpen, uncontrolledSetOpen] = useState(false);\n  const popoverRef = useRef<HTMLUListElement | null>(null);\n\n  const setOpen =\n    (typeof controlledOpen === 'boolean' && controlledSetOpen) ||\n    uncontrolledSetOpen;\n  const open = controlledOpen ?? uncontrolledOpen;\n  const handleClose = useCallback(() => {\n    if (shouldClose()) {\n      setOpen(false);\n    }\n  }, [setOpen, shouldClose]);\n\n  // Used to trigger a state update when the current subMenu changes since the current subMenu is stored in a ref to avoid extra rerenders on initial load.\n  const updateCurrentSubMenu = useForceRerender();\n\n  const triggerRef = useRef<HTMLElement>(null);\n  // This hook causes a second re-render on initial load. `useAvailableSpace` uses `useViewportSize` internally, which has internal state that causes re-renders.\n  const availableSpace = useAvailableSpace(refEl || triggerRef, spacing);\n  const memoizedAvailableSpace = useMemo(\n    () => availableSpace,\n    [availableSpace],\n  );\n  const maxMenuHeightValue = !isUndefined(memoizedAvailableSpace)\n    ? `${Math.min(memoizedAvailableSpace, maxHeight)}px`\n    : 'unset';\n\n  const { updatedChildren, refs } = React.useMemo(() => {\n    if (\n      children == null ||\n      ['boolean', 'number', 'string'].includes(typeof children)\n    ) {\n      return { updatedChildren: undefined, refs: [] };\n    }\n\n    const titleArr: Array<string> = [];\n    const refs: Array<HTMLElement> = [];\n\n    function updateChildren(children: React.ReactNode): React.ReactNode {\n      return React.Children.map(children, child => {\n        if (!React.isValidElement(child) || child.props?.disabled) {\n          return child;\n        }\n\n        const { props } = child;\n\n        let currentChildRef: HTMLElement | null = null;\n\n        const setRef = (ref: HTMLElement) => {\n          if (ref == null) {\n            return;\n          }\n\n          refs.push(ref);\n          currentChildRef = ref;\n\n          if (open && hasSetInitialFocus.current === false) {\n            setFocus(refs[0]);\n            hasSetInitialFocus.current = true;\n          }\n        };\n\n        const title = props?.title ?? false;\n\n        const onFocus = ({ target }: React.FocusEvent<HTMLElement>) => {\n          focusedRef.current = target;\n        };\n\n        if (isComponentType<SubMenuType>(child, 'SubMenu') && title) {\n          if (titleArr.includes(title)) {\n            throw new Error('SubMenu titles must be unique');\n          }\n\n          titleArr.push(title);\n\n          const shouldOpenActiveSubMenu =\n            !currentSubMenuRef.current &&\n            props.active &&\n            !hasSetInitialOpen.current;\n\n          // This opens the active submenu on inital load\n          if (shouldOpenActiveSubMenu) {\n            // Using a ref here prevents an extra rerender on initial load.\n            currentSubMenuRef.current = child;\n            hasSetInitialOpen.current = true;\n          }\n\n          const isCurrentSubMenu =\n            (currentSubMenuRef.current?.props as SubMenuProps)?.title === title;\n\n          return React.cloneElement(child, {\n            ref: setRef,\n            open: isCurrentSubMenu,\n            setOpen: (state: boolean) => {\n              if (currentChildRef) {\n                focusedRef.current = currentChildRef;\n              }\n\n              currentSubMenuRef.current = state ? child : null;\n              hasSetInitialOpen.current = true;\n              // Force update since the updated currentSubMenu is set in a ref.\n              updateCurrentSubMenu();\n            },\n            onKeyDown: (e: React.KeyboardEvent<HTMLButtonElement>) => {\n              if (e.key === keyMap.ArrowLeft && isCurrentSubMenu) {\n                currentSubMenuRef.current = null;\n                hasSetInitialOpen.current = true;\n                updateCurrentSubMenu();\n              }\n\n              if (e.key === keyMap.ArrowRight) {\n                currentSubMenuRef.current = child;\n                hasSetInitialOpen.current = true;\n                updateCurrentSubMenu();\n              }\n            },\n            onFocus,\n            children: updateChildren(props.children),\n            onExited: () => {\n              setClosed(curr => !curr);\n            },\n          });\n        }\n\n        if (isComponentType(child, 'MenuItem')) {\n          return React.cloneElement(child, {\n            ref: setRef,\n            onFocus,\n            onClick: (e: React.MouseEvent) => {\n              child.props?.onClick?.(e);\n              handleClose();\n            },\n          });\n        }\n\n        if (isComponentType(child, 'FocusableMenuItem')) {\n          return React.cloneElement(child, {\n            ref: setRef,\n            onFocus,\n          });\n        }\n\n        if (isComponentType(child, 'MenuSeparator')) {\n          return <MenuSeparator {...props} />;\n        }\n\n        if (props?.children) {\n          const { children, ...rest } = props;\n          return React.cloneElement(child, {\n            children: updateChildren(props.children),\n            ...rest,\n          });\n        }\n\n        return child;\n      });\n    }\n\n    return { updatedChildren: updateChildren(children), refs };\n  }, [children, open, updateCurrentSubMenu, handleClose]);\n\n  const focusedRef = useRef<HTMLElement | null>(refs[0] || null);\n\n  const setFocus = (el: HTMLElement | null) => {\n    if (el == null) {\n      return;\n    }\n\n    focusedRef.current = el;\n    el.focus();\n  };\n\n  useEffect(() => {\n    if (open) {\n      hasSetInitialFocus.current = false;\n      hasSetInitialOpen.current = false;\n    }\n  }, [open]);\n\n  useBackdropClick(handleClose, [popoverRef, triggerRef], open);\n\n  function handleKeyDown(e: KeyboardEvent) {\n    let refToFocus: HTMLElement;\n\n    switch (e.key) {\n      case keyMap.ArrowDown:\n        e.preventDefault(); // Prevents page scrolling\n        refToFocus =\n          refs[(refs.indexOf(focusedRef.current!) + 1) % refs.length];\n\n        setFocus(refToFocus);\n        break;\n\n      case keyMap.ArrowUp:\n        e.preventDefault(); // Prevents page scrolling\n        refToFocus =\n          refs[\n            (refs.indexOf(focusedRef.current!) - 1 + refs.length) % refs.length\n          ];\n        setFocus(refToFocus);\n        break;\n\n      case keyMap.Tab:\n        e.preventDefault(); // Prevent tabbing outside of portal and outside of the DOM when `usePortal={true}`\n        handleClose();\n        setFocus((refEl || triggerRef)?.current); // Focus the trigger on close\n        break;\n\n      case keyMap.Escape:\n        handleClose();\n        setFocus((refEl || triggerRef)?.current); // Focus the trigger on close\n        break;\n\n      case keyMap.Space:\n      case keyMap.Enter:\n        if (!open) {\n          setFocus(refs[0]);\n        }\n        break;\n    }\n  }\n\n  useEventListener('keydown', handleKeyDown, { enabled: open });\n\n  const popoverProps = {\n    popoverZIndex,\n    ...(usePortal\n      ? {\n          spacing,\n          usePortal,\n          portalClassName,\n          portalContainer,\n          scrollContainer,\n        }\n      : { spacing, usePortal }),\n  };\n\n  const providerData = useMemo(() => {\n    return { theme, darkMode };\n  }, [theme, darkMode]);\n\n  const popoverContent = (\n    <MenuContext.Provider value={providerData}>\n      <Popover\n        key=\"popover\"\n        active={open}\n        align={align}\n        justify={justify}\n        refEl={refEl}\n        adjustOnMutation={adjustOnMutation}\n        {...popoverProps}\n      >\n        <div\n          className={cx(\n            rootMenuStyle,\n            rootMenuThemeStyles[theme],\n            css`\n              max-height: ${maxMenuHeightValue};\n            `,\n            className,\n          )}\n          ref={forwardRef}\n        >\n          {/* Need to stop propagation, otherwise Menu will closed automatically when clicked */}\n          {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events*/}\n          <ul\n            {...rest}\n            className={scrollContainerStyle}\n            role=\"menu\"\n            onClick={e => e.stopPropagation()}\n            ref={popoverRef}\n          >\n            {updatedChildren}\n          </ul>\n        </div>\n      </Popover>\n    </MenuContext.Provider>\n  );\n\n  if (trigger) {\n    const triggerClickHandler = (event?: React.MouseEvent) => {\n      setOpen((curr: boolean) => !curr);\n\n      if (trigger && typeof trigger !== 'function') {\n        trigger.props?.onClick?.(event);\n      }\n\n      // We stop the native event from bubbling, but allow the React.Synthetic event to bubble\n      // This way click handlers on parent components will still fire,\n      // but this click event won't propagate up to the document and immediately close the menu.\n      event?.nativeEvent?.stopPropagation?.();\n    };\n\n    if (typeof trigger === 'function') {\n      return trigger({\n        onClick: triggerClickHandler,\n        ref: triggerRef,\n        children: popoverContent,\n        ['aria-expanded']: open,\n        ['aria-haspopup']: true,\n      });\n    }\n\n    const renderedTrigger = React.cloneElement(trigger, {\n      ref: triggerRef,\n      onClick: triggerClickHandler,\n      children: (\n        <>\n          {trigger.props.children}\n          {popoverContent}\n        </>\n      ),\n      ['aria-expanded']: open,\n      ['aria-haspopup']: true,\n    });\n\n    return renderedTrigger;\n  }\n\n  return popoverContent;\n});\n\nMenu.displayName = 'Menu';\n\nMenu.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  align: PropTypes.oneOf(Object.values(Align)),\n  justify: PropTypes.oneOf(Object.values(Justify)),\n  refEl: PropTypes.shape({\n    current:\n      typeof window !== 'undefined'\n        ? PropTypes.instanceOf(Element)\n        : PropTypes.any,\n  }),\n  usePortal: PropTypes.bool,\n  trigger: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n  darkMode: PropTypes.bool,\n} as any;\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FocusableMenuItemProps } from './MenuItem.types';\n\n/**\n * For internal use only: Component to allow us to include non-MenuItems in a Menu's group of focusable elements\n * @internal\n */\nexport const FocusableMenuItem = React.forwardRef(\n  ({ children }: FocusableMenuItemProps, forwardRef) => {\n    return React.cloneElement(children, {\n      ref: forwardRef,\n    });\n  },\n);\n\nFocusableMenuItem.displayName = 'FocusableMenuItem';\n\nFocusableMenuItem.propTypes = {\n  children: PropTypes.element.isRequired,\n  onFocus: PropTypes.func,\n};\n\nexport default FocusableMenuItem;\n","export const Size = {\n  Default: 'default',\n  Large: 'large',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport type ElementOf<\n  T extends React.ComponentType<React.PropsWithChildren<unknown>>,\n> = React.ReactComponentElement<T, React.ComponentPropsWithRef<T>>;\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  fontFamilies,\n  fontWeights,\n  transitionDuration,\n} from '@leafygreen-ui/tokens';\n\nimport { Size } from './types';\n\nexport const svgWidth = 24;\nexport const paddingLeftWithGlyph = 54;\nexport const paddingLeftWithoutGlyph = 20;\nconst indentation = 20;\nconst wedgeWidth = 4;\n\n/**\n * Base styles\n */\nexport const menuItemContainerStyle = css`\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  margin: unset;\n  padding-left: ${indentation}px;\n  padding-right: ${indentation}px;\n  font-family: ${fontFamilies.default};\n  font-size: 13px;\n  text-align: left;\n  text-decoration: none;\n  cursor: pointer;\n  border: none;\n\n  transition: background-color ${transitionDuration.default}ms ease-in-out;\n\n  &:focus {\n    outline: none;\n    text-decoration: none;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: ${wedgeWidth}px;\n    left: 0px;\n    border-radius: 0 ${wedgeWidth}px ${wedgeWidth}px 0;\n    background-color: transparent;\n    transition: background-color ${transitionDuration.default}ms ease-in-out;\n  }\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nexport const menuItemContainerThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.white};\n    background-color: ${palette.black};\n\n    &:hover,\n    &:active {\n      background-color: ${palette.gray.dark3};\n    }\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.black};\n    background-color: ${palette.gray.light2};\n\n    &:hover,\n    &:active {\n      background-color: ${palette.gray.light1};\n    }\n  `,\n};\n\nexport const menuItemHeight = (size: Size) => {\n  return css`\n    min-height: ${size === Size.Default ? 36 : 45}px;\n\n    &:before {\n      height: ${size === Size.Default ? 22 : 36}px;\n    }\n  `;\n};\n\nexport const textContainer = css`\n  width: 100%;\n  overflow: hidden;\n  padding: 2px 0;\n`;\n\nexport const mainIconBaseStyle = css`\n  margin-right: 16px;\n  flex-shrink: 0;\n`;\n\nexport const mainIconThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.base};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark1};\n  `,\n};\n\nexport const titleTextStyle = css`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  width: 100%;\n  font-size: 13px;\n  font-weight: ${fontWeights.medium};\n\n  // We create a pseudo element that's the width of the bolded text\n  // This way there's no layout shift on hover when the text is bolded.\n  &:after {\n    content: attr(data-text);\n    height: 0;\n    font-weight: ${fontWeights.bold};\n    visibility: hidden;\n    overflow: hidden;\n    user-select: none;\n    pointer-events: none;\n  }\n`;\n\nconst descriptionTextStyle = css`\n  font-size: 13px;\n  font-weight: ${fontWeights.regular};\n  line-height: 16px;\n  color: ${palette.gray.light1};\n`;\n\nexport const descriptionTextThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: cx(\n    descriptionTextStyle,\n    css`\n      color: ${palette.gray.light1};\n    `,\n  ),\n  [Theme.Dark]: cx(\n    descriptionTextStyle,\n    css`\n      color: ${palette.gray.dark2};\n    `,\n  ),\n};\n\nexport const linkDescriptionTextStyle = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n/**\n * Hover Styles\n */\n\nexport const getHoverStyles = (containerClass: string, theme: Theme) => ({\n  text: css`\n    .${containerClass} {\n      &:not(:disabled):hover & {\n        font-weight: ${fontWeights.bold};\n      }\n    }\n  `,\n  activeText: css`\n    .${containerClass} {\n      &:not(:disabled):hover & {\n        color: ${theme === Theme.Light\n          ? palette.green.base\n          : palette.green.dark3};\n      }\n    }\n  `,\n});\n\n/**\n * Active styles\n */\nexport const activeMenuItemContainerStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.black};\n\n    &:before {\n      background-color: ${palette.green.base};\n    }\n\n    &:hover {\n      color: ${palette.green.base};\n\n      &:before {\n        background-color: ${palette.green.base};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.light2};\n\n    &:before {\n      background-color: ${palette.green.dark2};\n    }\n\n    &:hover {\n      color: ${palette.green.dark3};\n\n      &:before {\n        background-color: ${palette.green.dark2};\n      }\n    }\n  `,\n};\n\nexport const activeTitleTextStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    font-weight: ${fontWeights.bold};\n    color: ${palette.green.base};\n  `,\n  [Theme.Dark]: css`\n    font-weight: ${fontWeights.bold};\n    color: ${palette.green.dark2};\n  `,\n};\n\nexport const activeDescriptionTextStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.light1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark2};\n  `,\n};\n\nexport const activeIconStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.green.base};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.green.dark2};\n  `,\n};\n\n/**\n * Disabled styles\n */\n\nconst disabledMenuItemContainerStyle = css`\n  cursor: not-allowed;\n\n  &:active {\n    pointer-events: none;\n    background-color: unset;\n  }\n\n  &:hover {\n    &,\n    &:before {\n      background-color: unset;\n    }\n  }\n`;\n\nexport const disabledMenuItemContainerThemeStyle: Record<Theme, string> = {\n  [Theme.Dark]: cx(\n    disabledMenuItemContainerStyle,\n    css`\n      background-color: ${palette.gray.light2};\n\n      &:hover {\n        background-color: ${palette.gray.light2};\n      }\n    `,\n  ),\n  [Theme.Light]: cx(\n    disabledMenuItemContainerStyle,\n    css`\n      background-color: ${palette.black};\n\n      &:hover {\n        background-color: ${palette.black};\n      }\n    `,\n  ),\n};\n\nexport const disabledTextStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n    font-weight: ${fontWeights.regular};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.base};\n    font-weight: ${fontWeights.regular};\n  `,\n};\n\n/**\n * Focused styles\n */\nexport const focusedMenuItemContainerStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible {\n      text-decoration: none;\n      background-color: ${palette.blue.dark3};\n      color: ${palette.white};\n\n      &:before {\n        background-color: ${palette.blue.light1};\n      }\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible {\n      text-decoration: none;\n      background-color: ${palette.blue.light2};\n      color: ${palette.blue.dark2};\n\n      &:before {\n        background-color: ${palette.blue.base};\n      }\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n  `,\n};\n\nexport const getFocusedStyles = (containerClassName: string, theme: Theme) => {\n  return {\n    textStyle: css`\n      .${containerClassName}:focus-visible & {\n        color: ${theme === Theme.Light\n          ? palette.blue.light3\n          : palette.blue.dark1};\n      }\n    `,\n    descriptionStyle: css`\n      .${containerClassName}:focus-visible & {\n        color: ${theme === Theme.Light\n          ? palette.blue.light3\n          : palette.blue.dark1};\n      }\n    `,\n    iconStyle: css`\n      .${containerClassName}:focus-visible & {\n        color: ${theme === Theme.Light\n          ? palette.blue.light3\n          : palette.blue.dark1};\n      }\n    `,\n  };\n};\n\n/**\n * Destructive styles\n */\nexport const destructiveTextStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.red.light1};\n    font-weight: ${fontWeights.regular};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.red.dark2};\n    font-weight: ${fontWeights.regular};\n  `,\n};\n\nexport const linkStyle = css`\n  text-decoration: none;\n`;\n\nexport const focusedSubMenuItemBorderStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible {\n      &::after {\n        background-color: ${palette.blue.dark3};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible {\n      &::after {\n        background-color: ${palette.blue.light2};\n      }\n    }\n  `,\n};\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const disabledIconStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark2};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.base};\n  `,\n};\n\nexport const destructiveIconStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.red.light1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.red.base};\n  `,\n};\n","import { css, cx } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { fontWeights, transitionDuration } from '@leafygreen-ui/tokens';\n\nexport const subMenuContainerClassName =\n  createUniqueClassName('sub-menu-container');\nexport const iconButtonClassName = createUniqueClassName('icon-button');\nexport const chevronClassName = createUniqueClassName('icon-button-chevron');\n\nexport const iconButtonContainerSize = 28;\n\nexport const subMenuStyle = css`\n  padding-right: ${iconButtonContainerSize + 16}px;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const subMenuThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: cx(\n    subMenuStyle,\n    css`\n      background-color: ${palette.black};\n    `,\n  ),\n  [Theme.Dark]: cx(\n    subMenuStyle,\n    css`\n      background-color: ${palette.gray.light2};\n    `,\n  ),\n};\n\nexport const subMenuOpenStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: transparent;\n\n    &:hover {\n      background-color: ${palette.gray.dark3};\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: transparent;\n\n    &:hover {\n      background-color: ${palette.gray.light1};\n    }\n  `,\n};\n\nexport const closedIconStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    transition: color 200ms ease-in-out;\n    color: ${palette.gray.light1};\n  `,\n  [Theme.Dark]: css`\n    transition: color 200ms ease-in-out;\n    color: ${palette.gray.dark1};\n  `,\n};\n\nexport const openIconStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.light1};\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark1};\n  `,\n};\n\nexport const iconButtonStyle = css`\n  position: absolute;\n  z-index: 1;\n  right: 8px;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  transition: background-color ${transitionDuration.default}ms ease-in-out;\n`;\n\nexport const iconButtonThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.black};\n\n    &:hover {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.light2};\n\n    &:hover {\n      &:before {\n        background-color: ${palette.gray.light3};\n      }\n    }\n  `,\n};\n\nexport const iconButtonFocusedThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible {\n      .${chevronClassName} {\n        color: ${palette.white};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible {\n      .${chevronClassName} {\n        color: ${palette.black};\n      }\n    }\n  `,\n};\n\nexport const openIconButtonStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.black};\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.gray.light2};\n  `,\n};\n\nexport const ulStyle = css`\n  list-style: none;\n  padding: 0;\n  height: 0;\n  overflow: hidden;\n  transition: height ${transitionDuration.default}ms ease-in-out;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    height: 1px;\n    right: 0;\n    z-index: 1;\n  }\n\n  &::before {\n    top: 0;\n  }\n\n  &::after {\n    bottom: 0;\n  }\n`;\n\nexport const ulThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &::before,\n    &::after {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n  [Theme.Dark]: css`\n    &::before,\n    &::after {\n      background-color: ${palette.gray.light1};\n    }\n  `,\n};\n\nexport const menuItemText = css`\n  width: 100%;\n  font-weight: ${fontWeights.regular};\n  font-size: 13px;\n  line-height: 16px;\n  padding-left: 16px;\n  text-shadow: none;\n`;\n\nexport const menuItemBorder = css`\n  position: absolute;\n  width: 100%;\n  height: 1px;\n  background: ${palette.gray.dark2};\n  top: 0;\n`;\n\nexport const menuItemBorderBottom = css`\n  ${menuItemBorder};\n  top: unset;\n  bottom: 0;\n`;\n\nexport const subItemStyle = css`\n  // Reassign the variable for specificity\n  --lg-menu-item-text-color: ${palette.gray.light1};\n  position: relative;\n  min-height: 32px;\n\n  > div {\n    padding-left: 16px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    height: 1px;\n    right: 0;\n    z-index: 1;\n    bottom: 0;\n  }\n`;\n\nexport const subItemThemeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.light1};\n\n    &::after {\n      background-color: ${palette.gray.dark2};\n    }\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.dark2};\n\n    &:hover {\n      color: ${palette.black};\n    }\n\n    &::after {\n      background-color: ${palette.gray.light1};\n    }\n  `,\n};\n","import { Size } from '../types';\n\nconst Variant = {\n  Default: 'default',\n  Destructive: 'destructive',\n} as const;\n\ntype Variant = (typeof Variant)[keyof typeof Variant];\n\nexport { Variant };\n\nexport interface MenuItemProps {\n  /**\n   * Determines whether or not the MenuItem is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Slot to pass in an Icon rendered to the left of `MenuItem` text.\n   * @type `<Icon />` component\n   */\n  glyph?: React.ReactElement;\n\n  /**\n   * Size of the MenuItem component, can be `default` or `large`\n   */\n  size?: Size;\n\n  /**\n   * Content to appear inside of `<MenuItem />` component\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Determines whether or not the MenuItem is active.\n   */\n  active?: boolean;\n\n  /**\n   * Description element displayed below title in MenuItem.\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Variant of MenuItem\n   */\n  variant?: Variant;\n}\n\nexport interface FocusableMenuItemProps {\n  children: React.ReactElement;\n  onFocus?: React.FocusEventHandler;\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { cx } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, getNodeTextContent } from '@leafygreen-ui/lib';\nimport {\n  InferredPolymorphic,\n  useInferredPolymorphic,\n} from '@leafygreen-ui/polymorphic';\n\nimport MenuContext from '../MenuContext/MenuContext';\nimport {\n  activeDescriptionTextStyle,\n  activeIconStyle,\n  activeMenuItemContainerStyle,\n  activeTitleTextStyle,\n  descriptionTextThemeStyle,\n  destructiveTextStyle,\n  disabledMenuItemContainerThemeStyle,\n  disabledTextStyle,\n  focusedMenuItemContainerStyle,\n  getFocusedStyles,\n  getHoverStyles,\n  linkDescriptionTextStyle,\n  linkStyle,\n  mainIconBaseStyle,\n  mainIconThemeStyle,\n  menuItemContainerStyle,\n  menuItemContainerThemeStyle,\n  menuItemHeight,\n  textContainer,\n  titleTextStyle,\n} from '../styles';\nimport { Size } from '../types';\n\nimport { destructiveIconStyle, disabledIconStyle } from './MenuItem.styles';\nimport { MenuItemProps, Variant } from './MenuItem.types';\n\nconst menuItemContainerClassName = createUniqueClassName('menu-item-container');\n\nexport const MenuItem = InferredPolymorphic<MenuItemProps, 'button'>(\n  (\n    {\n      as,\n      disabled = false,\n      active = false,\n      size = Size.Default,\n      className,\n      children,\n      description,\n      glyph,\n      variant = Variant.Default,\n      ...rest\n    },\n    ref: React.Ref<any>,\n  ) => {\n    const { Component } = useInferredPolymorphic(as, rest, 'button');\n    const { theme } = useContext(MenuContext);\n    const hoverStyles = getHoverStyles(menuItemContainerClassName, theme);\n    const focusStyles = getFocusedStyles(menuItemContainerClassName, theme);\n    const isDestructive = variant === Variant.Destructive;\n    const showActiveStyles = active && !isDestructive;\n\n    const isAnchor = Component === 'a';\n\n    const updatedGlyph =\n      glyph &&\n      React.cloneElement(glyph, {\n        role: 'presentation',\n        className: cx(\n          mainIconBaseStyle,\n          mainIconThemeStyle[theme],\n          focusStyles.iconStyle,\n          {\n            [activeIconStyle[theme]]: showActiveStyles,\n            [destructiveIconStyle[theme]]: isDestructive,\n            [disabledIconStyle[theme]]: disabled,\n          },\n          glyph.props?.className,\n        ),\n      });\n\n    const baseProps = {\n      ref,\n      role: 'menuitem',\n      tabIndex: -1,\n      'aria-disabled': disabled,\n      'aria-current': active ?? undefined,\n      // only add a disabled prop if not an anchor\n      ...(!isAnchor && { disabled }),\n    };\n\n    const anchorProps = isAnchor\n      ? {\n          target: '_self',\n          rel: '',\n        }\n      : {};\n\n    const content = (\n      <>\n        {updatedGlyph}\n        <div className={textContainer}>\n          <div\n            // Add text as data attribute to ensure no layout shift on hover\n            data-text={getNodeTextContent(children)}\n            className={cx(\n              titleTextStyle,\n              hoverStyles.text,\n              {\n                [activeTitleTextStyle[theme]]: showActiveStyles,\n                [hoverStyles.activeText]: showActiveStyles,\n                [destructiveTextStyle[theme]]: isDestructive,\n                [disabledTextStyle[theme]]: disabled,\n              },\n              focusStyles.textStyle,\n            )}\n          >\n            {children}\n          </div>\n          {description && (\n            <div\n              className={cx(\n                descriptionTextThemeStyle[theme],\n                {\n                  [activeDescriptionTextStyle[theme]]: showActiveStyles,\n                  [disabledTextStyle[theme]]: disabled,\n                  [linkDescriptionTextStyle]: isAnchor,\n                },\n                focusStyles.descriptionStyle,\n              )}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </>\n    );\n\n    return (\n      <li role=\"none\">\n        <Component\n          {...baseProps}\n          {...anchorProps}\n          {...rest}\n          className={cx(\n            menuItemContainerClassName,\n            menuItemContainerStyle,\n            menuItemContainerThemeStyle[theme],\n            menuItemHeight(size),\n            linkStyle,\n            {\n              [activeMenuItemContainerStyle[theme]]: showActiveStyles,\n              [disabledMenuItemContainerThemeStyle[theme]]: disabled,\n            },\n            focusedMenuItemContainerStyle[theme],\n            className,\n          )}\n        >\n          {content}\n        </Component>\n      </li>\n    );\n  },\n  'MenuItem',\n);\n\nMenuItem.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  description: PropTypes.node,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default MenuItem;\n","import React, { useCallback, useContext, useState } from 'react';\nimport { Transition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport ChevronDownIcon from '@leafygreen-ui/icon/dist/ChevronDown';\nimport ChevronUpIcon from '@leafygreen-ui/icon/dist/ChevronUp';\nimport IconButton from '@leafygreen-ui/icon-button';\nimport { getNodeTextContent } from '@leafygreen-ui/lib';\nimport {\n  InferredPolymorphic,\n  useInferredPolymorphic,\n} from '@leafygreen-ui/polymorphic';\n\nimport { MenuContext } from '../MenuContext';\nimport {\n  activeDescriptionTextStyle,\n  activeIconStyle,\n  activeMenuItemContainerStyle,\n  activeTitleTextStyle,\n  descriptionTextThemeStyle,\n  disabledMenuItemContainerThemeStyle,\n  disabledTextStyle,\n  focusedMenuItemContainerStyle,\n  focusedSubMenuItemBorderStyles,\n  getFocusedStyles,\n  getHoverStyles,\n  linkDescriptionTextStyle,\n  linkStyle,\n  mainIconBaseStyle,\n  mainIconThemeStyle,\n  menuItemContainerStyle,\n  menuItemContainerThemeStyle,\n  menuItemHeight,\n  paddingLeftWithGlyph,\n  paddingLeftWithoutGlyph,\n  textContainer,\n  titleTextStyle,\n} from '../styles';\nimport { Size } from '../types';\n\nimport {\n  chevronClassName,\n  closedIconStyle,\n  iconButtonClassName,\n  iconButtonFocusedThemeStyle,\n  iconButtonStyle,\n  iconButtonThemeStyle,\n  menuItemBorder,\n  menuItemBorderBottom,\n  menuItemText,\n  openIconButtonStyle,\n  openIconStyle,\n  subItemStyle,\n  subItemThemeStyle,\n  subMenuContainerClassName,\n  subMenuOpenStyle,\n  subMenuThemeStyle,\n  ulStyle,\n  ulThemeStyles,\n} from './SubMenu.styles';\nimport { SubMenuProps } from './SubMenu.types';\n\nconst subMenuItemHeight = 32;\n\nexport const SubMenu = InferredPolymorphic<SubMenuProps, 'button'>(\n  (\n    {\n      title,\n      children,\n      onClick,\n      description,\n      setOpen,\n      className,\n      glyph,\n      onExited = () => {},\n      open = false,\n      active = false,\n      disabled = false,\n      size = Size.Default,\n      as,\n      ...rest\n    },\n    ref: React.Ref<any>,\n  ): React.ReactElement => {\n    const { Component } = useInferredPolymorphic(as, rest, 'button');\n    const { theme, darkMode } = useContext(MenuContext);\n    const hoverStyles = getHoverStyles(subMenuContainerClassName, theme);\n    const focusStyles = getFocusedStyles(subMenuContainerClassName, theme);\n\n    const nodeRef = React.useRef(null);\n\n    const [iconButtonElement, setIconButtonElement] =\n      useState<HTMLElement | null>(null);\n\n    const onRootClick = useCallback(\n      (\n        e: React.MouseEvent<HTMLAnchorElement, MouseEvent> &\n          React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      ) => {\n        if (iconButtonElement?.contains(e.target as HTMLElement)) {\n          e.preventDefault();\n        } else if (onClick) {\n          onClick(e);\n        }\n      },\n      [iconButtonElement, onClick],\n    );\n\n    const numberOfMenuItems = React.Children.toArray(children).length;\n\n    const ChevronIcon = open ? ChevronDownIcon : ChevronUpIcon;\n    const chevronIconStyles = cx({\n      [openIconStyle[theme]]: open,\n      [closedIconStyle[theme]]: !open,\n    });\n\n    const handleChevronClick = (e: React.MouseEvent) => {\n      // we stop the event from propagating and closing the entire menu\n      e.nativeEvent.stopImmediatePropagation();\n\n      if (setOpen) {\n        setOpen(!open);\n      }\n    };\n\n    // TODO: This code is duplicated in `MenuItem`\n    // We should consider combining these.\n    // See: https://github.com/mongodb/leafygreen-ui/pull/1176\n    const isAnchor = Component === 'a';\n\n    const updatedGlyph =\n      glyph &&\n      React.cloneElement(glyph, {\n        role: 'presentation',\n        className: cx(\n          mainIconBaseStyle,\n          mainIconThemeStyle[theme],\n          focusStyles.iconStyle,\n          {\n            [activeIconStyle[theme]]: active,\n          },\n          glyph.props?.className,\n        ),\n      });\n\n    const baseProps = {\n      ref,\n      role: 'menuitem',\n      'aria-haspopup': true,\n      onClick: onRootClick,\n      tabIndex: disabled ? -1 : undefined,\n      'aria-disabled': disabled,\n      // only add a disabled prop if not an anchor\n      ...(typeof rest.href !== 'string' && { disabled }),\n    };\n\n    const anchorProps = isAnchor\n      ? {\n          target: '_self',\n          rel: '',\n        }\n      : {};\n\n    const content = (\n      <>\n        {updatedGlyph}\n        <div className={textContainer}>\n          <div\n            data-text={getNodeTextContent(children)}\n            className={cx(\n              titleTextStyle,\n              hoverStyles.text,\n              {\n                [activeTitleTextStyle[theme]]: active,\n                [hoverStyles.activeText]: active,\n                [disabledTextStyle[theme]]: disabled,\n              },\n              focusStyles.textStyle,\n            )}\n          >\n            {title}\n          </div>\n          {description && (\n            <div\n              className={cx(\n                descriptionTextThemeStyle[theme],\n                {\n                  [activeDescriptionTextStyle[theme]]: active,\n                  [disabledTextStyle[theme]]: disabled,\n                  [linkDescriptionTextStyle]: isAnchor,\n                },\n                focusStyles.descriptionStyle,\n              )}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </>\n    );\n\n    return (\n      <li role=\"none\">\n        <Component\n          {...baseProps}\n          {...anchorProps}\n          {...rest}\n          className={cx(\n            subMenuContainerClassName,\n            menuItemContainerStyle,\n            menuItemContainerThemeStyle[theme],\n            menuItemHeight(size),\n            linkStyle,\n            subMenuThemeStyle[theme],\n            {\n              [activeMenuItemContainerStyle[theme]]: active,\n              [disabledMenuItemContainerThemeStyle[theme]]: disabled,\n              [subMenuOpenStyle[theme]]: open,\n            },\n            focusedMenuItemContainerStyle[theme],\n            className,\n          )}\n        >\n          {content}\n          <IconButton\n            data-testid=\"lg-sub-menu-icon-button\"\n            darkMode={!darkMode}\n            ref={setIconButtonElement}\n            aria-label={open ? 'Close Sub-menu' : 'Open Sub-menu'}\n            className={cx(\n              iconButtonClassName,\n              iconButtonStyle,\n              iconButtonThemeStyle[theme],\n              iconButtonFocusedThemeStyle[theme],\n              {\n                [openIconButtonStyle[theme]]: open,\n              },\n            )}\n            onClick={handleChevronClick}\n          >\n            <ChevronIcon\n              role=\"presentation\"\n              className={cx(chevronClassName, chevronIconStyles)}\n              size={14}\n            />\n          </IconButton>\n        </Component>\n\n        <Transition\n          in={open}\n          timeout={{\n            enter: 0,\n            exit: 150,\n          }}\n          mountOnEnter\n          unmountOnExit\n          onExited={onExited}\n          nodeRef={nodeRef}\n        >\n          {(state: string) => (\n            <ul\n              ref={nodeRef}\n              className={cx(\n                ulStyle,\n                ulThemeStyles[theme],\n                css`\n                  &::before {\n                    // this is the width for the UL border\n                    width: calc(\n                      100% -\n                        ${glyph\n                          ? paddingLeftWithGlyph\n                          : paddingLeftWithoutGlyph}px\n                    );\n                  }\n                `,\n                {\n                  [css`\n                    height: ${subMenuItemHeight * numberOfMenuItems}px;\n                  `]: state === 'entered',\n                },\n              )}\n              role=\"menu\"\n              aria-label={title}\n            >\n              {React.Children.map(\n                children as React.ReactElement,\n                (child, index) => {\n                  const { className, ...rest } = child.props;\n                  return React.cloneElement(child, {\n                    size: Size.Default,\n                    children: (\n                      <>\n                        <div className={menuItemBorder} />\n                        <span className={menuItemText}>\n                          {child.props.children}\n                        </span>\n                        {index === numberOfMenuItems - 1 && (\n                          <div className={menuItemBorderBottom} />\n                        )}\n                      </>\n                    ),\n                    className: cx(\n                      subItemStyle,\n                      subItemThemeStyle[theme],\n                      css`\n                        // padding-left of the button\n                        padding-left: ${glyph\n                          ? paddingLeftWithGlyph\n                          : paddingLeftWithoutGlyph}px;\n                        &::after {\n                          // this is the width for the button bottom border\n                          width: calc(\n                            100% -\n                              ${glyph\n                                ? paddingLeftWithGlyph\n                                : paddingLeftWithoutGlyph}px\n                          );\n                        }\n                      `,\n                      focusedSubMenuItemBorderStyles[theme],\n                      child.props.className,\n                    ),\n                    onClick: (\n                      e: React.MouseEvent<HTMLAnchorElement, MouseEvent> &\n                        React.MouseEvent<HTMLButtonElement, MouseEvent>,\n                    ) => {\n                      child.props?.onClick?.(e);\n                      if (onClick) {\n                        onClick(e);\n                      }\n                    },\n                    ...rest,\n                  });\n                },\n              )}\n            </ul>\n          )}\n        </Transition>\n      </li>\n    );\n  },\n);\n\nSubMenu.displayName = 'SubMenu';\n\nSubMenu.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  children: PropTypes.node,\n  setOpen: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  glyph: PropTypes.element,\n  onExited: PropTypes.func,\n  open: PropTypes.bool,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default SubMenu;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_borderThemeStyle","MenuContext","createContext","theme","darkMode","borderStyle","css","_taggedTemplateLiteral","borderThemeStyle","_defineProperty","Theme","Light","palette","gray","dark2","Dark","light1","MenuSeparator","_ref","className","useContext","React","createElement","role","cx","displayName","_rootMenuThemeStyles","_templateObject4","_templateObject5","_excluded","_excluded2","rootMenuStyle","rootMenuThemeStyles","black","light2","scrollContainerStyle","Menu","forwardRef","_ref$align","align","Align","Bottom","_ref$justify","justify","Justify","End","_ref$adjustOnMutation","adjustOnMutation","_ref$shouldClose","shouldClose","_ref$spacing","spacing","_ref$maxHeight","maxHeight","_ref$usePortal","usePortal","controlledOpen","open","controlledSetOpen","setOpen","darkModeProp","children","refEl","trigger","portalClassName","portalContainer","scrollContainer","popoverZIndex","rest","_objectWithoutProperties","_useDarkMode","useDarkMode","hasSetInitialFocus","useRef","hasSetInitialOpen","setClosed","_slicedToArray","useState","currentSubMenuRef","_useState4","uncontrolledOpen","uncontrolledSetOpen","popoverRef","handleClose","useCallback","updateCurrentSubMenu","useForceRerender","triggerRef","availableSpace","useAvailableSpace","memoizedAvailableSpace","useMemo","maxMenuHeightValue","isUndefined","concat","Math","min","_React$useMemo","includes","_typeof","updatedChildren","undefined","refs","titleArr","updateChildren","Children","map","child","_child$props","_props$title","isValidElement","props","disabled","currentChildRef","setRef","ref","push","current","setFocus","title","onFocus","_ref2","target","focusedRef","isComponentType","_currentSubMenuRef$cu","_currentSubMenuRef$cu2","Error","active","isCurrentSubMenu","cloneElement","state","onKeyDown","e","key","keyMap","ArrowLeft","ArrowRight","onExited","curr","onClick","_child$props2","_child$props2$onClick","call","_rest","_objectSpread","el","focus","useEffect","useBackdropClick","useEventListener","_ref3","_ref4","refToFocus","ArrowDown","preventDefault","indexOf","length","ArrowUp","Tab","Escape","Space","Enter","enabled","popoverProps","providerData","popoverContent","Provider","value","Popover","_extends","stopPropagation","_React$cloneElement","_trigger","triggerClickHandler","event","_event$nativeEvent","_event$nativeEvent$st","_trigger$props","_trigger$props$onClic","nativeEvent","Fragment","propTypes","PropTypes","node","string","oneOf","Object","values","shape","window","instanceOf","Element","any","bool","oneOfType","func","FocusableMenuItem","element","isRequired","_menuItemContainerThe","_templateObject6","_templateObject7","_templateObject8","_mainIconThemeStyle","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_descriptionTextTheme","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_activeMenuItemContai","_templateObject18","_templateObject19","_activeTitleTextStyle","_templateObject20","_templateObject21","_activeDescriptionTex","_templateObject22","_templateObject23","_activeIconStyle","_templateObject24","_templateObject25","_templateObject26","_disabledMenuItemCont","_templateObject27","_templateObject28","_disabledTextStyle","_templateObject29","_templateObject30","_focusedMenuItemConta","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_destructiveTextStyle","_templateObject36","_templateObject37","_templateObject38","_focusedSubMenuItemBo","_disabledIconStyle","_destructiveIconStyle","_subMenuThemeStyle","_subMenuOpenStyle","_closedIconStyle","_openIconStyle","_iconButtonThemeStyle","_iconButtonFocusedThe","_openIconButtonStyle","_ulThemeStyles","_subItemThemeStyle","Size","menuItemContainerStyle","fontFamilies","default","transitionDuration","menuItemContainerThemeStyle","white","dark3","menuItemHeight","size","textContainer","mainIconBaseStyle","mainIconThemeStyle","base","dark1","titleTextStyle","fontWeights","medium","bold","descriptionTextStyle","regular","descriptionTextThemeStyle","linkDescriptionTextStyle","getHoverStyles","containerClass","text","activeText","green","activeMenuItemContainerStyle","activeTitleTextStyle","activeDescriptionTextStyle","activeIconStyle","disabledMenuItemContainerStyle","disabledMenuItemContainerThemeStyle","disabledTextStyle","focusedMenuItemContainerStyle","blue","getFocusedStyles","containerClassName","textStyle","light3","descriptionStyle","iconStyle","destructiveTextStyle","red","linkStyle","focusedSubMenuItemBorderStyles","disabledIconStyle","destructiveIconStyle","Variant","Default","Destructive","menuItemContainerClassName","createUniqueClassName","MenuItem","InferredPolymorphic","_cx","_glyph$props","_cx2","_cx3","_cx4","as","_ref$disabled","_ref$active","_ref$size","description","glyph","_ref$variant","variant","Component","useInferredPolymorphic","hoverStyles","focusStyles","isDestructive","showActiveStyles","isAnchor","updatedGlyph","baseProps","tabIndex","anchorProps","rel","content","getNodeTextContent","subMenuContainerClassName","iconButtonClassName","chevronClassName","subMenuStyle","iconButtonContainerSize","subMenuThemeStyle","subMenuOpenStyle","closedIconStyle","openIconStyle","iconButtonStyle","iconButtonThemeStyle","iconButtonFocusedThemeStyle","openIconButtonStyle","ulStyle","ulThemeStyles","menuItemText","menuItemBorder","menuItemBorderBottom","subItemStyle","subItemThemeStyle","SubMenu","_cx5","_onClick","_ref$onExited","_ref$open","_useContext","nodeRef","_useState2","iconButtonElement","setIconButtonElement","onRootClick","contains","numberOfMenuItems","toArray","ChevronIcon","ChevronDownIcon","ChevronUpIcon","chevronIconStyles","href","IconButton","stopImmediatePropagation","Transition","in","timeout","enter","exit","mountOnEnter","unmountOnExit","index"],"mappings":"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"}