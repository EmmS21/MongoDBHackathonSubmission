{"version":3,"file":"index.js","sources":["../../src/typeIs.ts","../../src/createUniqueClassName/index.ts","../../src/getNodeTextContent/index.ts","../../src/DarkModeProps/index.ts","../../src/getTheme.ts","../../src/allEqual.ts","../../src/validateChildren.tsx","../../src/createSyntheticEvent/createSyntheticEvent.ts","../../src/consoleOnce.ts","../../src/storybook/IntrinsicElements.ts","../../src/storybook/storybookArgTypes.ts","../../src/storybook/storybookExcludedControlParams.ts","../../src/storybook/StoryMeta.ts","../../src/index.ts"],"sourcesContent":["export function element(node?: Node | null): node is HTMLElement {\n  return node != null && node.nodeType === Node.ELEMENT_NODE;\n}\n\nexport function button(el?: Node | null): el is HTMLButtonElement {\n  return element(el) && el.tagName.toLowerCase() === 'button';\n}\n\nexport function input(el?: Node | null): el is HTMLInputElement {\n  return element(el) && el.tagName.toLowerCase() === 'input';\n}\n\nexport function array(item?: any): item is Array<unknown> {\n  return item != null && item instanceof Array;\n}\n","/**\n * `generateUniqueClassName` creates a string intended to be used as a pseudo-unique className.\n *\n * It returns a consecutive 4-number string prefixed by `lg-ui`, followed by a custom second prefix defined by the `prefix` param.\n *\n * @param prefix: a custom prefix that follows the `lg-ui` prefix.\n */\nconst generateUniqueClassName = (prefix: string) => {\n  const count = classNameRegistry.get(prefix)?.length ?? 0;\n  const postfix = count.toString().padStart(4, '0');\n  return `lg-ui${prefix ? `-${prefix}` : ''}-${postfix}`;\n};\n\nconst classNameRegistry: Map<string, Array<string>> = new Map();\n\nconst createUniqueClassName = (prefix: string = ''): string => {\n  const uniqueClassName = generateUniqueClassName(prefix);\n\n  if (classNameRegistry.has(prefix)) {\n    const prefixClasses = classNameRegistry.get(prefix);\n    classNameRegistry.set(prefix, [\n      uniqueClassName,\n      ...(prefixClasses as Array<string>),\n    ]);\n  } else {\n    classNameRegistry.set(prefix, [uniqueClassName]);\n  }\n  return uniqueClassName;\n};\n\nexport default createUniqueClassName;\n","import { ReactElement, ReactNode, ReactText } from 'react';\n\n/**\n * Returns the text string of a React node\n */\nexport default function getNodeTextContent(node?: ReactNode): string {\n  if (isText(node)) {\n    return node.toString().trim();\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(getNodeTextContent).join(' ').trim();\n  }\n\n  if (hasChildren(node)) {\n    return getNodeTextContent(node.props.children);\n  }\n\n  return '';\n}\n\nfunction hasChildren(item?: any): item is ReactElement {\n  return item && typeof item === 'object' && item.props;\n}\n\nfunction isText(item?: any): item is ReactText {\n  return typeof item === 'string' || typeof item === 'number';\n}\n","/**\n * Base interface used by components that support dark mode.\n *\n * @public\n */\nexport default interface DarkModeProps {\n  /**\n   * Renders the component with dark mode styles.\n   *\n   * @default false\n   */\n  darkMode?: boolean;\n}\n\nexport const Theme = { Light: 'light', Dark: 'dark' } as const;\nexport type Theme = (typeof Theme)[keyof typeof Theme];\n","import { Theme } from './DarkModeProps';\n\n/**\n *\n * Given a `darkMode` boolean, returns a `Theme` value - either dark or light.\n *\n * @param darkMode\n * @returns `Theme.Dark || Theme.Light`\n */\nconst getTheme = (darkMode: boolean): Theme =>\n  darkMode ? Theme.Dark : Theme.Light;\n\nexport default getTheme;\n","/**\n * Utility function that checks if the values in an array are all equal\n *\n *\n * @param arr `Array<any>`\n * @returns boolean\n */\nexport function allEqual<T>(arr: Array<T>): boolean {\n  return new Set(arr).size == 1;\n}\n","import isObject from 'lodash/isObject';\nimport isUndefined from 'lodash/isUndefined';\nimport React, { ReactElement } from 'react';\nimport { consoleOnce } from '.';\n\n/** Helper type to check if element is a specific React Component  */\nexport function isComponentType<\n  T extends React.ReactElement = React.ReactElement,\n>(element: React.ReactNode, displayName: string): element is T {\n  return (\n    element != null &&\n    typeof element === 'object' &&\n    'type' in element &&\n    ((element.type as any).displayName === displayName ||\n      // TODO: temp solution; Components using InferredPolymorphic have a displayName inside render.\n      // https://jira.mongodb.org/browse/LG-3232\n      (isObject(element.type as any) &&\n        'render' in (element.type as any) &&\n        (element.type as any).render?.displayName === displayName))\n  );\n}\n\n/**\n * Filters children down to a restricted set of component types.\n *\n * Example:\n * ```ts\n * // `options` will only include `ComboboxOption` components,\n * // and log an error to the console for any invalid children\n * const options = validateChildren(children, ['ComboboxOption'])\n * ```\n *\n * @returns Array<ReactElement>\n */\nexport const validateChildren = (\n  /** Any React children */\n  children: React.ReactNode,\n  /** Array of `displayNames` for valid components */\n  validTypes: Array<string>,\n): Array<ReactElement> | undefined => {\n  const validChildren = React.Children.map(children, child => {\n    if (validTypes.some(type => isComponentType(child, type))) {\n      return child as React.ReactElement;\n    }\n  })?.filter(child => !isUndefined(child));\n\n  if (\n    !isUndefined(children) &&\n    validChildren?.length !== React.Children.count(children)\n  ) {\n    consoleOnce.error(\n      `Children must be one of: ${validTypes.join(', ')}`,\n      `Received children: `,\n      children,\n    );\n  }\n\n  return validChildren;\n};\n","/**\n * Creates a React SyntheticEvent based on the provided native event and target.\n *\n * Based on https://stackoverflow.com/a/68979462/2200383\n */\nexport const createSyntheticEvent = <T extends Element, E extends Event>(\n  event: E,\n  target: T,\n): React.SyntheticEvent<T, E> => {\n  // Assign the target property to the event\n  Object.defineProperty(event, 'target', { writable: false, value: target });\n\n  let isDefaultPrevented = false;\n  let isPropagationStopped = false;\n\n  const preventDefault = () => {\n    isDefaultPrevented = true;\n    event.preventDefault();\n  };\n\n  const stopPropagation = () => {\n    isPropagationStopped = true;\n    event.stopPropagation();\n  };\n\n  return {\n    nativeEvent: event,\n    currentTarget: event.currentTarget as EventTarget & T,\n    target: event.target as EventTarget & T,\n    bubbles: event.bubbles,\n    cancelable: event.cancelable,\n    defaultPrevented: event.defaultPrevented,\n    eventPhase: event.eventPhase,\n    isTrusted: event.isTrusted,\n    preventDefault,\n    isDefaultPrevented: () => isDefaultPrevented,\n    stopPropagation,\n    isPropagationStopped: () => isPropagationStopped,\n    persist: () => {},\n    timeStamp: event.timeStamp,\n    type: event.type,\n  };\n};\n","import once from 'lodash/once';\n\nexport const consoleOnce = {\n  error: once(console.error),\n  warn: once(console.warn),\n  log: once(console.log),\n};\n","const IntrinsicElements: Array<keyof JSX.IntrinsicElements> = [\n  // 'symbol', - SVG only element\n  // 'object', - irrelevant for `as` prop\n  'small',\n  'button',\n  'a',\n  'abbr',\n  'address',\n  // 'area', - Void element - cannot accept Children\n  'article',\n  'aside',\n  // 'audio', irrelevant for `as` prop\n  'b',\n  // 'base', - Void element - cannot accept Children\n  // 'bdi', irrelevant for `as` prop\n  // 'bdo', irrelevant for `as` prop\n  'big',\n  'blockquote',\n  // 'body', irrelevant for `as` prop\n  // 'br', - Void element - cannot accept Children\n  // 'canvas', irrelevant for `as` prop\n  'caption',\n  'cite',\n  'code',\n  // 'col', - Void element - cannot accept Children\n  // 'colgroup', irrelevant for `as` prop\n  // 'data', irrelevant for `as` prop\n  // 'datalist', irrelevant for `as` prop\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  // 'dl', irrelevant for `as` prop\n  // 'dt', irrelevant for `as` prop\n  'em',\n  // 'embed', - Void element - cannot accept Children\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  // 'hr', - Void element - cannot accept Children\n  // 'html', irrelevant for `as` prop\n  'i',\n  // 'iframe', irrelevant for `as` prop\n  // 'img', - Void element - cannot accept Children\n  // 'input', - Void element - cannot accept Children\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  // 'link', - Void element - cannot accept Children\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  // 'meta', - Void element - cannot accept Children\n  'meter',\n  'nav',\n  // 'noindex', irrelevant for `as` prop\n  'noscript',\n  'ol',\n  // 'optgroup', irrelevant for `as` prop\n  // 'option', irrelevant for `as` prop\n  // 'output', irrelevant for `as` prop\n  'p',\n  // 'param', irrelevant for `as` prop\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'slot',\n  'script',\n  'section',\n  'select',\n  // 'source', - Void element - cannot accept Children\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  // 'table', irrelevant for `as` prop\n  'template',\n  'tbody',\n  'td',\n  // 'textarea', irrelevant for `as` prop\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  // 'track', - Void element - cannot accept Children\n  'u',\n  'ul',\n  // 'var', irrelevant for `as` prop\n  // 'video', irrelevant for `as` prop\n  // 'wbr', - Void element - cannot accept Children\n  // 'webview', irrelevant for `as` prop\n  // 'svg', - SVG only element\n];\n\nexport default IntrinsicElements;\n","import { InputType } from '@storybook/csf';\nimport IntrinsicElements from './IntrinsicElements';\n\nexport interface StoryArgType extends InputType {\n  /**\n   * Identify an arg to determine where the control is defined\n   */\n  displayedPlatforms?: 'storybookOnly' | 'websiteOnly';\n\n  /**\n   * Define the control type\n   *\n   * Avoid using this property to exclude a control.\n   * Use `parameters.controls.exclude` for this.\n   */\n  control?:\n    | string\n    | {\n        type: string;\n        [key: string]: any;\n      };\n\n  /**\n   * `defaultValue` is deprecated in Storybook 7.\n   *\n   * Use `args` instead\n   *\n   * @deprecated\n   */\n  defaultValue?: any;\n}\n\nexport const storybookArgTypes: Record<string, StoryArgType> = {\n  baseFontSize: {\n    description:\n      'The base font size passed to the LeafyGreenProvider that wraps the component',\n    control: { type: 'radio' },\n    options: [14, 16],\n  },\n  updatedBaseFontSize: {\n    description:\n      'The base font size passed to the LeafyGreenProvider that wraps the component. Uses the updated font size values for Euclid Circular A.',\n    control: { type: 'radio' },\n    options: [13, 16],\n  },\n  darkMode: {\n    description: 'Render the component in dark mode.',\n    control: 'boolean',\n  },\n  children: {\n    description: 'Element rendered inside the component',\n    control: 'text',\n  },\n  as: {\n    description:\n      'The component will be rendered in HTML as the element selected here',\n    options: IntrinsicElements,\n    type: { name: 'string' },\n    control: { type: 'select' },\n    defaultValue: 'button',\n  },\n} as const;\n\n/** By default we set argType to `control:none`\n * for props we don't want to control in Storybook\n */\nexport const storybookExcludedArgTypes: Record<string, StoryArgType> = {\n  'aria-controls': { control: 'none' },\n  'aria-describedby': { control: 'none' },\n  'aria-label': { control: 'none' },\n  'aria-labelledby': { control: 'none' },\n  className: { control: 'none' },\n  id: { control: 'none' },\n  onBlur: { control: 'none' },\n  onCancel: { control: 'none' },\n  onChange: { control: 'none' },\n  onClear: { control: 'none' },\n  onClick: { control: 'none' },\n  onClose: { control: 'none' },\n  onConfirm: { control: 'none' },\n  onDismiss: { control: 'none' },\n  onFilter: { control: 'none' },\n  onSubmit: { control: 'none' },\n  portalClassName: { control: 'none' },\n  portalContainer: { control: 'none' },\n  popoverZIndex: { control: 'none' },\n  ref: { control: 'none' },\n  scrollContainer: { control: 'none' },\n  usePortal: { control: 'none' },\n} as const;\n","export const storybookExcludedControlParams = [\n  'aria-controls',\n  'aria-describedby',\n  'aria-label',\n  'aria-labelledby',\n  'aria-describedby',\n  'className',\n  'id',\n  'onBlur',\n  'onCancel',\n  'onChange',\n  'onClear',\n  'onClick',\n  'onConfirm',\n  'onDismiss',\n  'onFilter',\n  'popoverZIndex',\n  'portalClassName',\n  'portalContainer',\n  'ref',\n  'setOpen',\n  'scrollContainer',\n  'usePortal',\n] as const;\n","import { mergeWith } from 'lodash';\n\nimport { StoryMetaType } from './StoryMeta.types';\n\n/**\n *\n * Storybook 7.x requires a statically defined object as the default export.\n *\n * Use {@link StoryMetaType} (and {@link baseStoryMeta} as necessary)\n *\n * Example:\n *\n * ```ts\n * const meta: StoryMetaType<typeof Component> = {\n *  component: Component,\n *  ...baseStoryMeta\n * }\n * export default meta\n * ```\n *\n *\n * @deprecated\n */\nexport const StoryMeta = <\n  T extends React.ElementType,\n  XP extends Record<string, any>,\n>(\n  meta: StoryMetaType<T, XP> = {} as StoryMetaType<T, XP>,\n): StoryMetaType<T, XP> => {\n  return mergeWith(meta, {}, (metaVal, baseVal) => {\n    if (Array.isArray(metaVal)) return metaVal.concat(baseVal);\n    if (typeof metaVal === 'string') return metaVal;\n    // default to _.merge behavior\n    return;\n  });\n};\n","import * as typeIs from './typeIs';\nimport createUniqueClassName from './createUniqueClassName';\nimport getNodeTextContent from './getNodeTextContent';\nimport DarkModeProps, { Theme } from './DarkModeProps';\nimport getTheme from './getTheme';\nimport { allEqual } from './allEqual';\nexport { validateChildren, isComponentType } from './validateChildren';\nexport { createSyntheticEvent } from './createSyntheticEvent';\nexport { consoleOnce } from './consoleOnce';\n\nexport {\n  type ExtendedComponentProps,\n  type GeneratedStoryConfig,\n  type GeneratedStoryFn,\n  type InstanceDecorator,\n  type PlayFn,\n  StoryMeta,\n  type StoryMetaType,\n  type StoryType,\n  storybookArgTypes,\n  storybookExcludedArgTypes,\n  storybookExcludedControlParams,\n  IntrinsicElements,\n} from './storybook';\n\nexport {\n  typeIs,\n  createUniqueClassName,\n  getNodeTextContent,\n  getTheme,\n  Theme,\n  allEqual,\n};\nexport type { DarkModeProps };\n\n/** Helper type to extract an HTML element's valid props */\nexport type HTMLElementProps<\n  Element extends keyof JSX.IntrinsicElements,\n  RefType extends HTMLElement = never,\n> = React.PropsWithChildren<Omit<JSX.IntrinsicElements[Element], 'ref'>> & {\n  ref?: [RefType] extends [never] ? never : React.Ref<RefType>;\n  key?: React.Key | null;\n};\n\n/**\n * Helper that constructs a type requiring at least one of the passed keys\n * to be present in the passed interface.\n *\n * Example\n * ```\n * interface ExampleInterface {\n *   alwaysRequired: boolean,\n *   sometimesRequired: boolean,\n *   requiredOtherTimes: boolean,\n * }\n *\n * type ExampleEither = Either<ExampleInterface, 'sometimesRequired' | 'requiredOtherTimes'>\n *\n * // The above is equivalent to:\n * interface SharedInExampleInterface {\n *   alwaysRequired: boolean,\n * }\n *\n * interface FirstIsRequired extends SharedInExampleInterface {\n *   sometimesRequired: boolean,\n *   requiredOtherTimes?: boolean,\n * }\n *\n * interface SecondIsRequired extends SharedInExampleInterface {\n *   sometimesRequired?: boolean,\n *   requiredOtherTimes: boolean,\n * }\n *\n * type EquivalentToExampleEither = FirstIsRequired | SecondIsRequired\n * ```\n */\nexport type Either<T, Keys extends keyof T = keyof T> = Omit<T, Keys> &\n  {\n    [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>;\n  }[Keys];\n\n/**\n * Helper that constructs mutually exclusive record types. Refer to tests for usage.\n */\nexport type OneOf<T1, T2> =\n  | (T1 & Partial<Record<Exclude<keyof T2, keyof T1>, never>>)\n  | (T2 & Partial<Record<Exclude<keyof T1, keyof T2>, never>>);\n\n/**\n * Utility for making it easier to couple a React Component to a css selector.\n * Useful when writing css selectors that rely on interactivity, i.e. :hover.\n * Example:\n *  const checkBoxWrapper = createDataProp('checkbox-wrapper');\n *  // Used as selector:\n *  css`&:hover ${checkboxWrapper.selector} { }`\n *  // Used on React Component\n *  <div {...checkboxWrapper.prop} />\n * @param {string} name Name of element we want to reference.\n *\n * @deprecated\n */\nexport function createDataProp(name: string) {\n  // ts:emit throws an error if this is not typed. Usually this can be inferred.\n  const prefix = 'data-leafygreen-ui' as string;\n\n  return {\n    prop: {\n      [prefix]: name,\n    },\n    selector: `[${prefix}=\"${name}\"]`,\n  };\n}\n\n/** Object mapping keyCodes to keys */\nexport const keyMap = {\n  ArrowUp: 'ArrowUp',\n  ArrowDown: 'ArrowDown',\n  ArrowLeft: 'ArrowLeft',\n  ArrowRight: 'ArrowRight',\n  Backspace: 'Backspace',\n  BracketLeft: '[',\n  Delete: 'Delete',\n  Enter: 'Enter',\n  Escape: 'Escape',\n  Space: 'Space',\n  Tab: 'Tab',\n} as const;\n\n/**\n * An enum of accepted values for the \"aria-current\" attribute, used for\n * indicating current/active state across several contexts.\n *\n * The values \"false\", the empty string, and an ommission of this attribute\n * are all treated identically by user agents and screen readers.\n *\n * W3C Recommendation: https://www.w3.org/TR/wai-aria-1.1/#aria-current\n */\nexport const AriaCurrentValue = {\n  Page: 'page', // current value in a set of pagination links\n  Step: 'step', // current value in a step indicator\n  Location: 'location', // current value in a chart or other visual flow\n  Date: 'date', // current value in a calendar or date picker\n  Time: 'time', // current value in a timetable or time picker\n  True: 'true', // (fallback) current value in any set of options/elements\n  Unset: 'false', // equivalent to omitting the aria-current attribute\n} as const;\n\nexport type AriaCurrentValue =\n  (typeof AriaCurrentValue)[keyof typeof AriaCurrentValue];\n\n/**\n * Accepts a type as an argument and makes all of the keys of the type optional\n */\nexport type RecursivePartial<T> = {\n  [P in keyof T]?: T[P] extends Array<infer U>\n    ? Array<RecursivePartial<U>>\n    : T[P] extends object\n    ? RecursivePartial<T[P]>\n    : T[P] extends infer U | undefined\n    ? RecursivePartial<U> | undefined\n    : T[P] extends infer U | null\n    ? RecursivePartial<U> | null\n    : T[P];\n};\n\n/**\n * Helper function to use the typechecker to catch when\n * not all cases of a type have been handled.\n *\n * Example 1:\n *   let color: 'red' | 'blue' | 'green';\n *   switch (color) {\n *      case 'red':\n *        ...\n *        break;\n *      case 'blue':\n *        ...\n *        break;\n *      default:\n *        enforceExhaustive(color);\n *                          ^^^^^\n *          Argument of type 'string' is not assignable to parameter of type 'never'.\n *   }\n *\n * Example 2:\n *   let key: number | string | symbol;\n *\n *   if (typeof key === 'string') {\n *     ...\n *     return;\n *   }\n *\n *   if (typeof key === 'number') {\n *      ...\n *      return;\n *   }\n *\n *   enforceExhaustive(key);\n *                     ^^^\n *     Argument of type 'symbol' is not assignable to parameter of type 'never'.\n */\nexport function enforceExhaustive(value: never): never {\n  throw Error(`Received unhandled value: ${value}`);\n}\n"],"names":["element","node","nodeType","Node","ELEMENT_NODE","item","Array","el","tagName","toLowerCase","classNameRegistry","Map","createUniqueClassName","prefix","arguments","length","undefined","uniqueClassName","_classNameRegistry$ge","_classNameRegistry$ge2","postfix","get","toString","padStart","concat","generateUniqueClassName","has","prefixClasses","set","_toConsumableArray","getNodeTextContent","trim","isArray","map","join","_typeof","props","hasChildren","children","Theme","Light","Dark","getTheme","darkMode","allEqual","arr","Set","size","isComponentType","displayName","_render","type","isObject","render","validateChildren","validTypes","_React$Children$map","validChildren","React","Children","child","some","filter","isUndefined","count","consoleOnce","error","createSyntheticEvent","event","target","Object","defineProperty","writable","value","_isDefaultPrevented","_isPropagationStopped","nativeEvent","currentTarget","bubbles","cancelable","defaultPrevented","eventPhase","isTrusted","preventDefault","isDefaultPrevented","stopPropagation","isPropagationStopped","persist","timeStamp","once","console","warn","log","IntrinsicElements","storybookArgTypes","baseFontSize","description","control","options","updatedBaseFontSize","as","name","defaultValue","storybookExcludedArgTypes","className","id","onBlur","onCancel","onChange","onClear","onClick","onClose","onConfirm","onDismiss","onFilter","onSubmit","portalClassName","portalContainer","popoverZIndex","ref","scrollContainer","usePortal","storybookExcludedControlParams","StoryMeta","mergeWith","metaVal","baseVal","createDataProp","prop","_defineProperty","selector","keyMap","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Backspace","BracketLeft","Delete","Enter","Escape","Space","Tab","AriaCurrentValue","Page","Step","Location","Date","Time","True","Unset","enforceExhaustive","Error"],"mappings":"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"}