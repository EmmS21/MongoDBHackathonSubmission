{"version":3,"file":"Diagram.js","sources":["../src/glyphCommon.ts","../src/generated/Diagram.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n* This is a generated file. Do not modify it manually.\n*\n* @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n* @checksum 733175f4eed74e2aa2cd758f21e0a377\n*/\nimport * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface DiagramProps extends LGGlyph.ComponentProps {}\nconst Diagram = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: DiagramProps) => {\n  const fillStyle = css`\n        color: ${fill};\n      `;\n  const noFlexShrink = css`\n        flex-shrink: 0;\n      `;\n  const accessibleProps = generateAccessibleProps(role, 'Diagram', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby\n  });\n  return <svg className={cx({\n    [fillStyle]: fill != null\n  }, noFlexShrink, className)} height={typeof size === 'number' ? size : sizeMap[size]} width={typeof size === 'number' ? size : sizeMap[size]} role={role} {...accessibleProps} {...props} viewBox=\"0 0 16 16\"><path d=\"M6 2.75C6 2.33579 6.33579 2 6.75 2H9.25C9.66421 2 10 2.33579 10 2.75V4.25C10 4.66421 9.66421 5 9.25 5H8.5V7H13.25C13.6642 7 14 7.33579 14 7.75V10H14.25C14.6642 10 15 10.3358 15 10.75V12.25C15 12.6642 14.6642 13 14.25 13H12.25C11.8358 13 11.5 12.6642 11.5 12.25V10.75C11.5 10.3358 11.8358 10 12.25 10H13V8H8.5V10H9C9.41421 10 9.75 10.3358 9.75 10.75V12.25C9.75 12.6642 9.41421 13 9 13H7C6.58579 13 6.25 12.6642 6.25 12.25V10.75C6.25 10.3358 6.58579 10 7 10H7.5V8H3V10H3.75C4.16421 10 4.5 10.3358 4.5 10.75V12.25C4.5 12.6642 4.16421 13 3.75 13H1.75C1.33579 13 1 12.6642 1 12.25V10.75C1 10.3358 1.33579 10 1.75 10H2V7.75C2 7.33579 2.33579 7 2.75 7H7.5V5H6.75C6.33579 5 6 4.66421 6 4.25V2.75Z\" fill={'currentColor'} /></svg>;\n};\nDiagram.displayName = 'Diagram';\nDiagram.isGlyph = true;\nDiagram.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string\n};\nexport default Diagram;"],"names":["_templateObject","_templateObject2","sizeMap","small","default","large","xlarge","_excluded","Diagram","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","concat","replace","alt","generateAccessibleProps","React","createElement","_extends","cx","height","width","viewBox","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"i9DAOO,ICHHA,EAAiBC,EDGVC,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICNV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAWpFC,EAAU,SAAiBC,GAC7B,IAAIC,EACAC,EAAYF,EAAKE,UACnBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAMF,GACrCe,EAAYC,EAAAA,IAAIvB,IAAoBA,EAAkBwB,EAAuB,CAAC,oBAAqB,eAAgBP,GACnHQ,EAAeF,EAAGA,IAACtB,IAAqBA,EAAmBuB,EAAuB,CAAC,wCACnFE,EDjBC,SAAiCP,EAAMQ,EAAWlB,GACvD,IAAImB,EAmBwBC,EAlBxBd,EAAYN,EAAK,cACnBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MACf,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAKnBgB,EAAZF,EAAQ,CAAA,EAA2B,kBAAmBZ,GAAiBc,EAAgBF,EAAO,aAAcb,GAAYe,EAAgBF,EAAO,QAASd,GAAQc,GAJ9J,CACL,cAWoBC,EAXQF,EAY7B,GAAGI,OAAOF,EAAKG,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACL,eAAe,EACfC,IAAK,IAGb,CCFwBC,CAAwBf,EAAM,WAEjDW,EAF6DpB,EAAwB,CACtFI,MAAOA,GACiC,aAAcC,GAAYe,EAAgBpB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAoByB,EAAMC,cAAc,MAAOC,EAAS,CACtD1B,UAAW2B,EAAAA,GAAGR,EAAgB,GAAIR,EAAmB,MAARL,GAAeQ,EAAcd,GAC1E4B,OAAwB,iBAAT1B,EAAoBA,EAAOX,EAAQW,GAClD2B,MAAuB,iBAAT3B,EAAoBA,EAAOX,EAAQW,GACjDM,KAAMA,GACLO,EAAiBN,EAAO,CACzBqB,QAAS,cACMN,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,mrBACHzB,KAAM,iBAEV,SACAT,EAAQmC,YAAc,UACtBnC,EAAQoC,SAAU,EAClBpC,EAAQqC,UAAY,CAClB5B,KAAM6B,EAAS1C,QAAC2C,OAChBlC,KAAMiC,EAAS1C,QAAC4C,UAAU,CAACF,EAAS1C,QAAC6C,OAAQH,EAAAA,QAAUC,SACvDpC,UAAWmC,EAAS1C,QAAC2C"}