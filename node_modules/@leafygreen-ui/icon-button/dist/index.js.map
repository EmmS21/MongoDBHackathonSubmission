{"version":3,"file":"index.js","sources":["../src/types.ts","../src/styles.tsx","../src/IconButton.tsx"],"sourcesContent":["import { BoxProps } from '@leafygreen-ui/box';\nimport { Either, HTMLElementProps } from '@leafygreen-ui/lib';\n\nexport const Size = {\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\n// Since applications can't yet tree-shake, we're duplicating this interface from the types in the namespaces within the Icon package rather than importing the Icon package.\n// TODO: Import {IconProps} from '.../icon`\nexport interface IconProps extends React.SVGProps<SVGSVGElement> {\n  glyph: string;\n  size?: Size | number;\n  title?: string | null | boolean;\n}\n\n// Not extending `button` props. Instead using `BoxProps`\nexport interface BaseIconButtonProps {\n  className?: string;\n\n  /**\n   * The Leafygreen `<Icon />` component to render\n   */\n  children?: React.ReactNode;\n\n  /**\n   * If `true`, the button will be rendered with disabled styles\n   */\n  disabled?: boolean;\n  /**\n   * Size of the icon\n   */\n  size?: Size;\n\n  darkMode?: boolean;\n  /**\n   * If `true`, the button will be rendered with active styles\n   */\n  active?: boolean;\n  /**\n   * `href` property for the button. If this value is set, the IconButton will be rendered with an anchor tag.\n   */\n  href?: string;\n  /**\n   * The aria-label attribute defines a string value that labels an interactive element.\n   *\n   * [Mozilla Docs](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label)\n   */\n  'aria-label'?: string;\n  /**\n   * The aria-labelledby attribute identifies the element (or elements) that labels the element it is applied to.\n   *\n   * [Mozilla Docs](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby)\n   */\n  'aria-labelledby'?: string;\n  /**\n   * Callback fired on click\n   */\n  onClick?: React.MouseEventHandler<HTMLButtonElement | HTMLAnchorElement>;\n\n  /**\n   * The component or HTML Element that the button is rendered as.\n   */\n  as?: React.ElementType<any>;\n\n  /**\n   * Sets the tabIndex for IconButton component.\n   */\n  tabIndex?: HTMLElementProps<'button'>['tabIndex'];\n}\n\ntype AriaLabels = 'aria-label' | 'aria-labelledby';\n\nexport type AccessibleIconButtonProps = BoxProps<\n  'button',\n  Either<BaseIconButtonProps, AriaLabels>\n>;\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport { focusRing, transitionDuration } from '@leafygreen-ui/tokens';\n\nimport { Size } from './types';\n\nexport const removeButtonStyle = css`\n  border: none;\n  -webkit-appearance: unset;\n  padding: unset;\n`;\n\nexport const baseIconButtonStyle = css`\n  display: inline-block;\n  border-radius: 100px;\n  position: relative;\n  cursor: pointer;\n  flex-shrink: 0;\n  transition: ${transitionDuration.default}ms ease-in-out;\n  transition-property: color, box-shadow;\n\n  // Set background to fully-transparent white for cross-browser compatability with Safari\n  //\n  // Safari treats \"transparent\" values in CSS as transparent black instead of white\n  // which can make things render differently across browsers if not defined explicitly.\n  background-color: rgba(255, 255, 255, 0);\n\n  &:before {\n    content: '';\n    transition: ${transitionDuration.default}ms all ease-in-out;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-radius: 100%;\n    opacity: 0;\n    transform: scale(0.8);\n  }\n\n  &:active:before,\n  &:hover:before,\n  &:focus:before {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const iconButtonSizes = {\n  [Size.Default]: css`\n    height: 28px;\n    width: 28px;\n  `,\n  [Size.Large]: css`\n    height: 36px;\n    width: 36px;\n  `,\n  [Size.XLarge]: css`\n    height: 42px;\n    width: 42px;\n  `,\n} as const;\n\nexport const iconButtonMode: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.gray.dark1};\n\n    &:active,\n    &:hover {\n      color: ${palette.black};\n\n      &:before {\n        background-color: ${palette.gray.light2};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light1};\n\n    &:active,\n    &:hover {\n      color: ${palette.gray.light3};\n\n      &:before {\n        background-color: ${palette.gray.dark2};\n      }\n    }\n  `,\n};\n\nexport const focusStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &:focus-visible {\n      color: ${palette.black};\n      box-shadow: ${focusRing[Theme.Light].default};\n\n      &:before {\n        background-color: ${palette.gray.light2};\n      }\n    }\n  `,\n  [Theme.Dark]: css`\n    &:focus-visible {\n      color: ${palette.gray.light3};\n      box-shadow: ${focusRing[Theme.Dark].default};\n\n      &:before {\n        background-color: ${palette.gray.dark1};\n      }\n    }\n  `,\n} as const;\n\nexport const disabledStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    cursor: not-allowed;\n    color: ${palette.gray.light1};\n    background-color: rgba(255, 255, 255, 0);\n\n    &:active,\n    &:hover {\n      color: ${palette.gray.light1};\n\n      &:before {\n        background-color: rgba(255, 255, 255, 0);\n      }\n    }\n\n    &:focus {\n      color: ${palette.gray.light1};\n\n      &:before {\n        background-color: rgba(255, 255, 255, 0);\n      }\n    }\n  `,\n\n  [Theme.Dark]: css`\n    cursor: not-allowed;\n    color: ${palette.gray.dark1};\n    background-color: rgba(255, 255, 255, 0);\n\n    &:active,\n    &:hover {\n      color: ${palette.gray.dark1};\n\n      &:before {\n        background-color: rgba(255, 255, 255, 0);\n      }\n    }\n\n    &:focus {\n      color: ${palette.gray.dark1};\n\n      &:before {\n        background-color: rgba(255, 255, 255, 0);\n      }\n    }\n  `,\n} as const;\n\nexport const activeStyle: Record<Theme, string> = {\n  [Theme.Light]: css`\n    color: ${palette.black};\n\n    &:before {\n      background-color: ${palette.gray.light2};\n      opacity: 1;\n      transform: scale(1);\n    }\n  `,\n  [Theme.Dark]: css`\n    color: ${palette.gray.light3};\n\n    &:before {\n      background-color: ${palette.gray.dark1};\n      opacity: 1;\n      transform: scale(1);\n    }\n  `,\n} as const;\n\nexport const iconStyle = css`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { validateAriaLabelProps } from '@leafygreen-ui/a11y';\nimport Box from '@leafygreen-ui/box';\nimport { cx } from '@leafygreen-ui/emotion';\nimport { isComponentGlyph } from '@leafygreen-ui/icon';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\nimport { isComponentType } from '@leafygreen-ui/lib';\n\nimport {\n  activeStyle,\n  baseIconButtonStyle,\n  disabledStyle,\n  focusStyle,\n  iconButtonMode,\n  iconButtonSizes,\n  iconStyle,\n  removeButtonStyle,\n} from './styles';\nimport { AccessibleIconButtonProps, IconProps, Size } from './types';\n\nexport const IconButton = React.forwardRef(\n  (\n    {\n      size = Size.Default,\n      darkMode: darkModeProp,\n      disabled = false,\n      active = false,\n      tabIndex = 0,\n      className,\n      children,\n      ...rest\n    }: AccessibleIconButtonProps,\n    ref: React.Ref<any>,\n  ) => {\n    const { theme } = useDarkMode(darkModeProp);\n    const isAnchor: boolean = typeof rest.href === 'string';\n\n    // We do our own proptype validation here to ensure either 'aria-label' or 'aria-labelledby' are passed to the component.\n    validateAriaLabelProps(rest, 'IconButton');\n\n    const processedChildren = React.Children.map(children, child => {\n      if (!child) {\n        return null;\n      }\n\n      // Check to see if child is a LeafyGreen Icon or a LeafyGreen Glyph\n      // If so, we unset the title and rely on the aria-label prop to give\n      // information about the rendered content.\n      if (isComponentType(child, 'Icon') || isComponentGlyph(child)) {\n        const { size: childSize, title }: IconProps = child.props;\n\n        const newChildProps: Partial<IconProps> = {\n          size: childSize || size,\n        };\n\n        if (typeof title !== 'string' || title.length === 0) {\n          // Unsets the title within an icon since the button itself will have\n          // aria-label or aria-labelledby set.\n          newChildProps.title = false;\n        }\n\n        return React.cloneElement(child, newChildProps);\n      }\n\n      return child;\n    });\n\n    const iconButtonProps = {\n      ...rest,\n      ref,\n      tabIndex,\n      // We don't set the `disabled` prop since we want the button to be focusable\n      ['aria-disabled']: disabled,\n      // Override any actions if it's disabled\n      href: disabled ? undefined : rest.href,\n      onClick: disabled ? undefined : rest.onClick,\n      className: cx(\n        removeButtonStyle,\n        baseIconButtonStyle,\n        iconButtonSizes[size],\n        iconButtonMode[theme],\n        focusStyle[theme],\n        {\n          [activeStyle[theme]]: active && !disabled,\n          [disabledStyle[theme]]: disabled,\n        },\n        className,\n      ),\n    };\n\n    return (\n      <Box as={isAnchor ? 'a' : 'button'} {...iconButtonProps}>\n        <div className={iconStyle}>{processedChildren}</div>\n      </Box>\n    );\n  },\n);\n\nIconButton.displayName = 'IconButton';\n\nIconButton.propTypes = {\n  darkMode: PropTypes.bool,\n  size: PropTypes.oneOf(Object.values(Size)),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  active: PropTypes.bool,\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_iconButtonSizes","_templateObject6","_templateObject7","_iconButtonMode","_templateObject8","_templateObject9","_focusStyle","_templateObject10","_templateObject11","_disabledStyle","_templateObject12","_templateObject13","_activeStyle","_templateObject14","Size","Default","Large","XLarge","removeButtonStyle","css","_taggedTemplateLiteral","baseIconButtonStyle","transitionDuration","default","iconButtonSizes","_defineProperty","iconButtonMode","Theme","Light","palette","gray","dark1","black","light2","Dark","light1","light3","dark2","focusStyle","focusRing","disabledStyle","activeStyle","iconStyle","_excluded","IconButton","React","forwardRef","_ref","ref","_cx","_objectSpread2","_ref$size","size","darkModeProp","darkMode","_ref$disabled","disabled","_ref$active","active","_ref$tabIndex","tabIndex","className","children","rest","_objectWithoutProperties","theme","useDarkMode","isAnchor","href","validateAriaLabelProps","processedChildren","Children","map","child","isComponentType","isComponentGlyph","_child$props","props","childSize","title","newChildProps","length","cloneElement","iconButtonProps","_objectSpread","undefined","onClick","cx","createElement","Box","_extends","as","displayName","propTypes","PropTypes","bool","oneOf","Object","values","string","node"],"mappings":"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"}