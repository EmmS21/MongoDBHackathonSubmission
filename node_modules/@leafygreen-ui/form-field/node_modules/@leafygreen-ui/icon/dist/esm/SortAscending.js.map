{"version":3,"file":"SortAscending.js","sources":["../../src/glyphCommon.ts","../../src/generated/SortAscending.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n* This is a generated file. Do not modify it manually.\n*\n* @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n* @checksum 6a27b4a7ab458bd4f79c305573e132a7\n*/\nimport * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface SortAscendingProps extends LGGlyph.ComponentProps {}\nconst SortAscending = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: SortAscendingProps) => {\n  const fillStyle = css`\n        color: ${fill};\n      `;\n  const noFlexShrink = css`\n        flex-shrink: 0;\n      `;\n  const accessibleProps = generateAccessibleProps(role, 'SortAscending', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby\n  });\n  return <svg className={cx({\n    [fillStyle]: fill != null\n  }, noFlexShrink, className)} height={typeof size === 'number' ? size : sizeMap[size]} width={typeof size === 'number' ? size : sizeMap[size]} role={role} {...accessibleProps} {...props} viewBox=\"0 0 16 16\"><path d=\"M4.44991 1.14265C4.23029 0.95245 3.90429 0.952449 3.68466 1.14265L1.20302 3.29182C0.793944 3.64609 1.04449 4.31811 1.58564 4.31811H2.89835V13.6696C2.89835 14.3152 3.4217 14.8386 4.06729 14.8386C4.71287 14.8386 5.23623 14.3152 5.23623 13.6696V4.31811H6.54893C7.09009 4.31811 7.34063 3.64609 6.93156 3.29182L4.44991 1.14265Z\" fill={'currentColor'} /><path d=\"M8 5C7.44772 5 7 5.44772 7 6C7 6.55228 7.44772 7 8 7H14C14.5523 7 15 6.55228 15 6C15 5.44772 14.5523 5 14 5H8Z\" fill={'currentColor'} /><path d=\"M7 9C7 8.44772 7.44772 8 8 8H12C12.5523 8 13 8.44772 13 9C13 9.55229 12.5523 10 12 10H8C7.44772 10 7 9.55229 7 9Z\" fill={'currentColor'} /><path d=\"M8 11C7.44772 11 7 11.4477 7 12C7 12.5523 7.44772 13 8 13H10C10.5523 13 11 12.5523 11 12C11 11.4477 10.5523 11 10 11H8Z\" fill={'currentColor'} /></svg>;\n};\nSortAscending.displayName = 'SortAscending';\nSortAscending.isGlyph = true;\nSortAscending.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string\n};\nexport default SortAscending;"],"names":["_templateObject","_templateObject2","sizeMap","small","default","large","xlarge","_excluded","SortAscending","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","concat","replace","alt","generateAccessibleProps","React","createElement","_extends","cx","height","width","viewBox","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"yvCAOO,ICHHA,EAAiBC,EDGVC,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICNV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAWpFC,EAAgB,SAAuBC,GACzC,IAAIC,EACAC,EAAYF,EAAKE,UACnBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAMF,GACrCe,EAAYC,EAAIvB,IAAoBA,EAAkBwB,EAAuB,CAAC,oBAAqB,eAAgBP,GACnHQ,EAAeF,EAAItB,IAAqBA,EAAmBuB,EAAuB,CAAC,wCACnFE,EDjBC,SAAiCP,EAAMQ,EAAWlB,GACvD,IAAImB,EAmBwBC,EAlBxBd,EAAYN,EAAK,cACnBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MACf,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAKnBgB,EAAZF,EAAQ,CAAA,EAA2B,kBAAmBZ,GAAiBc,EAAgBF,EAAO,aAAcb,GAAYe,EAAgBF,EAAO,QAASd,GAAQc,GAJ9J,CACL,cAWoBC,EAXQF,EAY7B,GAAGI,OAAOF,EAAKG,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACL,eAAe,EACfC,IAAK,IAGb,CCFwBC,CAAwBf,EAAM,iBAEjDW,EAFmEpB,EAAwB,CAC5FI,MAAOA,GACiC,aAAcC,GAAYe,EAAgBpB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAoByB,EAAMC,cAAc,MAAOC,EAAS,CACtD1B,UAAW2B,EAAGR,EAAgB,GAAIR,EAAmB,MAARL,GAAeQ,EAAcd,GAC1E4B,OAAwB,iBAAT1B,EAAoBA,EAAOX,EAAQW,GAClD2B,MAAuB,iBAAT3B,EAAoBA,EAAOX,EAAQW,GACjDM,KAAMA,GACLO,EAAiBN,EAAO,CACzBqB,QAAS,cACMN,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,qUACHzB,KAAM,iBACSkB,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,iHACHzB,KAAM,iBACSkB,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,oHACHzB,KAAM,iBACSkB,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,0HACHzB,KAAM,iBAEV,EACAT,EAAcmC,YAAc,gBAC5BnC,EAAcoC,SAAU,EACxBpC,EAAcqC,UAAY,CACxB5B,KAAM6B,EAAUC,OAChBlC,KAAMiC,EAAUE,UAAU,CAACF,EAAUG,OAAQH,EAAUC,SACvDpC,UAAWmC,EAAUC"}