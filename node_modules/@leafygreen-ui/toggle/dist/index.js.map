{"version":3,"file":"index.js","sources":["../src/Toggle/types.ts","../src/Toggle/styles.ts","../src/Toggle/Toggle.tsx"],"sourcesContent":["import { Either, HTMLElementProps } from '@leafygreen-ui/lib';\n\nexport const Size = {\n  Default: 'default',\n  Small: 'small',\n  XSmall: 'xsmall',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\ninterface BaseToggleProps {\n  /**\n   * Sets the size of the toggle.\n   *\n   * @default 'default'\n   */\n  size?: Size;\n\n  /**\n   * Determines if the Toggle will render the dark mode styles.\n   *\n   * @default false\n   */\n  darkMode?: boolean;\n\n  /**\n   * Sets the checked state of the Toggle.\n   */\n  checked?: boolean;\n\n  /**\n   * Disables the Toggle.\n   *\n   * @default false\n   */\n  disabled?: boolean;\n\n  /**\n   * `onChange` fires when the internally-managed `checked` state of the component is updated. Receives the updated checked state of the toggle as its first argument, and the associated mouse event as the second.\n   */\n  onChange?: (\n    checked: boolean,\n    mouseEvent: React.MouseEvent<HTMLButtonElement>,\n  ) => void;\n\n  /**\n   * Adds a className to the outermost element.\n   */\n  className?: string;\n}\n\nexport type ToggleProps = Either<\n  BaseToggleProps &\n    Omit<HTMLElementProps<'button', never>, keyof BaseToggleProps>,\n  'aria-label' | 'aria-labelledby'\n>;\n","import { css } from '@leafygreen-ui/emotion';\nimport { createUniqueClassName, Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\nimport {\n  focusRing,\n  hoverRing,\n  transitionDuration,\n} from '@leafygreen-ui/tokens';\n\nimport { Size } from './types';\n\nexport const toggleButtonClassName = createUniqueClassName('toggle-button');\n\nexport const buttonSelectors = {\n  checked: `.${toggleButtonClassName}[aria-checked=\"true\"]`,\n  unchecked: `.${toggleButtonClassName}[aria-checked=\"false\"]`,\n  disabled: `.${toggleButtonClassName}:disabled`,\n};\n\nexport const sliderSelector = {\n  checked: `${buttonSelectors.checked} > &`,\n  unchecked: `${buttonSelectors.unchecked} > &`,\n  disabled: `${buttonSelectors.disabled} > &`,\n};\n\nexport const checkmarkSelector = {\n  checked: `${buttonSelectors.checked}:not(:disabled) &`,\n  unchecked: `${buttonSelectors.unchecked}:not(:disabled) &`,\n  disabledChecked: `${buttonSelectors.checked}:disabled &`,\n  disabledUnchecked: `${buttonSelectors.unchecked}:disabled &`,\n};\n\nexport const buttonBaseStyles = css`\n  transition: ${transitionDuration.default}ms all ease-in-out,\n    0s background-color linear;\n  display: inline-block;\n  flex-shrink: 0;\n  position: relative;\n  padding: 0;\n  border-radius: 50px;\n  border: 1px solid;\n  cursor: pointer;\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &[aria-checked='true'] {\n    transition-delay: ${transitionDuration.default}ms;\n\n    &:before {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  // We're animating this pseudo-element in order to give the toggle groove\n  // background an animation in and out.\n  &:before {\n    content: '';\n    transition: ${transitionDuration.default}ms all ease-in-out;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-radius: 50px;\n    opacity: 0;\n    transform: scale(0.85);\n  }\n\n  &:disabled:before {\n    opacity: 0;\n  }\n`;\n\nexport const sliderBaseStyles = css`\n  transition: all ${transitionDuration.default}ms ease-in-out;\n  border-radius: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  ${sliderSelector.disabled} {\n    &:before,\n    &:after {\n      content: none;\n    }\n  }\n`;\n\nexport const buttonSizeStyles: Record<Size, string> = {\n  [Size.Default]: css`\n    height: 32px;\n    width: 56px;\n  `,\n\n  [Size.Small]: css`\n    height: 22px;\n    width: 40px;\n  `,\n\n  [Size.XSmall]: css`\n    height: 14px;\n    width: 24px;\n  `,\n};\n\nexport const sliderSizeStyles: Record<Size, string> = {\n  [Size.Default]: css`\n    height: 28px;\n    width: 28px;\n    left: 1px;\n\n    ${sliderSelector.checked} {\n      transform: translate3d(24px, 0, 0);\n    }\n  `,\n\n  [Size.Small]: css`\n    height: 18px;\n    width: 18px;\n    left: 1px;\n\n    ${sliderSelector.checked} {\n      transform: translate3d(18px, 0, 0);\n    }\n  `,\n\n  [Size.XSmall]: css`\n    height: 12px;\n    width: 12px;\n\n    ${sliderSelector.checked} {\n      transform: translate3d(10px, 0, 0);\n    }\n  `,\n};\n\nexport const buttonThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    &[aria-checked='false']:not(:disabled) {\n      background-color: ${palette.gray.base};\n      border-color: ${palette.gray.base};\n    }\n\n    &[aria-checked='true'] {\n      // We set background-color here to avoid a small issue with overflow clipping\n      // that makes this look less seamless than it should.\n      background-color: ${palette.blue.base};\n      border-color: ${palette.blue.base};\n    }\n\n    &:disabled {\n      background-color: ${palette.gray.light2};\n      border-color: ${palette.gray.light2};\n    }\n\n    &:before {\n      background-color: ${palette.blue.base};\n    }\n\n    &:hover:not(:disabled) {\n      box-shadow: ${hoverRing.light.gray};\n    }\n\n    &:focus-visible:not(:disabled) {\n      box-shadow: ${focusRing.light.default};\n    }\n  `,\n  [Theme.Dark]: css`\n    &[aria-checked='false']:not(:disabled) {\n      background-color: ${palette.gray.dark1};\n      border-color: ${palette.gray.dark1};\n    }\n\n    &[aria-checked='true'] {\n      // We set background-color here to avoid a small issue with overflow clipping\n      // that makes this look less seamless than it should.\n      background-color: ${palette.blue.light1};\n      border-color: ${palette.blue.light1};\n    }\n\n    &:disabled {\n      background-color: ${palette.gray.dark2};\n      border-color: ${palette.gray.dark2};\n    }\n\n    &:before {\n      background-color: ${palette.blue.light1};\n    }\n\n    &:hover:not(:disabled) {\n      box-shadow: ${hoverRing.dark.gray};\n    }\n\n    &:focus-visible:not(:disabled) {\n      box-shadow: ${focusRing.dark.default};\n    }\n  `,\n};\n\nexport const sliderThemeStyles: Record<Theme, string> = {\n  [Theme.Light]: css`\n    background-color: ${palette.white};\n\n    ${sliderSelector.disabled} {\n      background-color: ${palette.gray.light3};\n    }\n  `,\n  [Theme.Dark]: css`\n    background-color: ${palette.white};\n\n    ${sliderSelector.disabled} {\n      background-color: ${palette.gray.dark1};\n    }\n  `,\n};\n\nexport const checkmarkBaseStyles = css`\n  display: flex;\n  transition: color ${transitionDuration.default}ms ease-in-out;\n`;\n\nexport const checkmarkThemeStyles: Record<Theme, string> = {\n  [Theme.Dark]: css`\n    ${checkmarkSelector.checked} {\n      color: ${palette.blue.light1};\n    }\n\n    ${checkmarkSelector.unchecked} {\n      color: ${palette.white};\n    }\n\n    ${checkmarkSelector.disabledChecked} {\n      color: ${palette.gray.dark2};\n    }\n\n    ${checkmarkSelector.disabledUnchecked} {\n      color: ${palette.gray.dark1};\n    }\n  `,\n  [Theme.Light]: css`\n    ${checkmarkSelector.checked} {\n      color: ${palette.blue.base};\n    }\n\n    ${checkmarkSelector.unchecked} {\n      color: ${palette.white};\n    }\n\n    ${checkmarkSelector.disabledChecked} {\n      color: ${palette.gray.light1};\n    }\n\n    ${checkmarkSelector.disabledUnchecked} {\n      color: ${palette.gray.light3};\n    }\n  `,\n};\n\nexport const checkmarkSize: Omit<Record<Size, number>, 'xsmall'> = {\n  [Size.Default]: 16,\n  [Size.Small]: 14,\n};\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { validateAriaLabelProps } from '@leafygreen-ui/a11y';\nimport { cx } from '@leafygreen-ui/emotion';\nimport CheckmarkIcon from '@leafygreen-ui/icon/dist/Checkmark';\nimport { useDarkMode } from '@leafygreen-ui/leafygreen-provider';\n\nimport {\n  buttonBaseStyles,\n  buttonSizeStyles,\n  buttonThemeStyles,\n  checkmarkBaseStyles,\n  checkmarkSize,\n  checkmarkThemeStyles,\n  sliderBaseStyles,\n  sliderSizeStyles,\n  sliderThemeStyles,\n  toggleButtonClassName,\n} from './styles';\nimport { Size, ToggleProps } from './types';\n\nfunction Toggle({\n  className,\n  size = Size.Default,\n  darkMode: darkModeProp,\n  disabled = false,\n  onChange: onChangeProp,\n  onClick: onClickProp,\n  checked: controlledChecked,\n  ...rest\n}: ToggleProps) {\n  validateAriaLabelProps(rest, Toggle.displayName);\n  const { theme } = useDarkMode(darkModeProp);\n  const [checked, setChecked] = useState(false);\n\n  const isControlled = typeof controlledChecked === 'boolean';\n  const normalizedChecked = controlledChecked ?? checked;\n\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = useCallback(\n    e => {\n      onClickProp?.(e);\n\n      if (isControlled) {\n        onChangeProp?.(!controlledChecked, e);\n      } else {\n        setChecked(curr => {\n          const updatedState = !curr;\n          onChangeProp?.(updatedState, e);\n          return updatedState;\n        });\n      }\n    },\n    [isControlled, controlledChecked, onClickProp, onChangeProp],\n  );\n\n  return (\n    <button\n      role=\"switch\"\n      type=\"button\"\n      onClick={onClick}\n      aria-checked={normalizedChecked}\n      disabled={disabled}\n      aria-disabled={disabled}\n      className={cx(\n        className,\n        toggleButtonClassName,\n        buttonBaseStyles,\n        buttonThemeStyles[theme],\n        buttonSizeStyles[size],\n      )}\n      {...rest}\n    >\n      <div\n        className={cx(\n          sliderBaseStyles,\n          sliderSizeStyles[size],\n          sliderThemeStyles[theme],\n        )}\n      >\n        {size !== Size.XSmall && (\n          <CheckmarkIcon\n            aria-hidden={true}\n            className={cx(checkmarkBaseStyles, checkmarkThemeStyles[theme])}\n            size={checkmarkSize[size]}\n          />\n        )}\n      </div>\n    </button>\n  );\n}\n\nToggle.displayName = 'Toggle';\n\nToggle.propTypes = {\n  size: PropTypes.oneOf(Object.values(Size)),\n  darkMode: PropTypes.bool,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default Toggle;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_buttonSizeStyles","_templateObject6","_templateObject7","_templateObject8","_sliderSizeStyles","_templateObject9","_templateObject10","_buttonThemeStyles","_templateObject11","_templateObject12","_sliderThemeStyles","_templateObject13","_templateObject14","_templateObject15","_checkmarkThemeStyles","_checkmarkSize","Size","Default","Small","XSmall","toggleButtonClassName","createUniqueClassName","buttonSelectors","checked","concat","unchecked","disabled","sliderSelector","checkmarkSelector","disabledChecked","disabledUnchecked","buttonBaseStyles","css","_taggedTemplateLiteral","transitionDuration","default","sliderBaseStyles","buttonSizeStyles","_defineProperty","sliderSizeStyles","buttonThemeStyles","Theme","Light","palette","gray","base","blue","light2","hoverRing","light","focusRing","Dark","dark1","light1","dark2","dark","sliderThemeStyles","white","light3","checkmarkBaseStyles","checkmarkThemeStyles","checkmarkSize","_excluded","Toggle","_ref","className","_ref$size","size","darkModeProp","darkMode","_ref$disabled","onChangeProp","onChange","onClickProp","onClick","controlledChecked","rest","_objectWithoutProperties","validateAriaLabelProps","displayName","theme","useDarkMode","_useState2","_slicedToArray","useState","setChecked","isControlled","normalizedChecked","useCallback","e","curr","updatedState","React","createElement","_extends","role","type","cx","CheckmarkIcon","propTypes","PropTypes","oneOf","Object","values","bool","string","func"],"mappings":"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"}