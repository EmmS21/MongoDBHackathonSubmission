{"version":3,"file":"Code.js","sources":["../src/glyphCommon.ts","../src/generated/Code.tsx"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n* This is a generated file. Do not modify it manually.\n*\n* @script ./node_modules/.bin/ts-node packages/icon/scripts/build.ts\n* @checksum 01172984c5d6381e0df60ff1f87f25fc\n*/\nimport * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface CodeProps extends LGGlyph.ComponentProps {}\nconst Code = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: CodeProps) => {\n  const fillStyle = css`\n        color: ${fill};\n      `;\n  const noFlexShrink = css`\n        flex-shrink: 0;\n      `;\n  const accessibleProps = generateAccessibleProps(role, 'Code', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby\n  });\n  return <svg className={cx({\n    [fillStyle]: fill != null\n  }, noFlexShrink, className)} height={typeof size === 'number' ? size : sizeMap[size]} width={typeof size === 'number' ? size : sizeMap[size]} role={role} {...accessibleProps} {...props} viewBox=\"0 0 16 16\"><path d=\"M6.10919 13.2623C6.05677 13.5335 6.23405 13.7959 6.50517 13.8484L7.24153 13.9908C7.51265 14.0433 7.77494 13.8659 7.82736 13.5946L9.92574 2.73775C9.97817 2.4665 9.80088 2.20409 9.52976 2.15164L8.7934 2.00919C8.52228 1.95674 8.25999 2.13411 8.20757 2.40536L6.10919 13.2623Z\" fill={'currentColor'} /><path d=\"M1.35982 7.24558L3.97571 5.11122C4.18784 4.93814 4.50313 4.9662 4.67991 5.17391L5.32009 5.92607C5.49687 6.13378 5.46821 6.44247 5.25607 6.61556L3.56205 7.99774L5.25607 9.37993C5.46821 9.55302 5.49687 9.86171 5.32009 10.0694L4.67991 10.8216C4.50313 11.0293 4.18784 11.0574 3.97571 10.8843L1.35982 8.74991C1.13182 8.56389 1 8.28832 1 7.99774C1 7.70717 1.13182 7.4316 1.35982 7.24558Z\" fill={'currentColor'} /><path d=\"M14.6362 7.24558L12.0203 5.11122C11.8082 4.93814 11.4929 4.9662 11.3161 5.17391L10.6759 5.92607C10.4991 6.13378 10.5278 6.44247 10.7399 6.61556L12.4339 7.99774L10.7399 9.37993C10.5278 9.55302 10.4991 9.86171 10.6759 10.0694L11.3161 10.8216C11.4929 11.0293 11.8082 11.0574 12.0203 10.8843L14.6362 8.74991C14.8642 8.56389 14.996 8.28832 14.996 7.99774C14.996 7.70717 14.8642 7.4316 14.6362 7.24558Z\" fill={'currentColor'} /></svg>;\n};\nCode.displayName = 'Code';\nCode.isGlyph = true;\nCode.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  className: PropTypes.string\n};\nexport default Code;"],"names":["_templateObject","_templateObject2","sizeMap","small","default","large","xlarge","_excluded","Code","_ref","_generateAccessiblePr","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","css","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","_ref2","name","_defineProperty","concat","replace","alt","generateAccessibleProps","React","createElement","_extends","cx","height","width","viewBox","d","displayName","isGlyph","propTypes","PropTypes","string","oneOfType","number"],"mappings":"w8DAOO,ICHHA,EAAiBC,EDGVC,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,ICNV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAWpFC,EAAO,SAAcC,GACvB,IAAIC,EACAC,EAAYF,EAAKE,UACnBC,EAAYH,EAAKI,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQL,EAAKK,MACbC,EAAYN,EAAK,cACjBO,EAAiBP,EAAK,mBACtBQ,EAAOR,EAAKQ,KACZC,EAAYT,EAAKU,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,EAAQC,EAAyBZ,EAAMF,GACrCe,EAAYC,EAAAA,IAAIvB,IAAoBA,EAAkBwB,EAAuB,CAAC,oBAAqB,eAAgBP,GACnHQ,EAAeF,EAAGA,IAACtB,IAAqBA,EAAmBuB,EAAuB,CAAC,wCACnFE,EDjBC,SAAiCP,EAAMQ,EAAWlB,GACvD,IAAImB,EAmBwBC,EAlBxBd,EAAYN,EAAK,cACnBO,EAAiBP,EAAK,mBACtBK,EAAQL,EAAKK,MACf,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,GAKnBgB,EAAZF,EAAQ,CAAA,EAA2B,kBAAmBZ,GAAiBc,EAAgBF,EAAO,aAAcb,GAAYe,EAAgBF,EAAO,QAASd,GAAQc,GAJ9J,CACL,cAWoBC,EAXQF,EAY7B,GAAGI,OAAOF,EAAKG,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACL,eAAe,EACfC,IAAK,IAGb,CCFwBC,CAAwBf,EAAM,QAEjDW,EAF0DpB,EAAwB,CACnFI,MAAOA,GACiC,aAAcC,GAAYe,EAAgBpB,EAAuB,kBAAmBM,GAAiBN,IAC/I,OAAoByB,EAAMC,cAAc,MAAOC,EAAS,CACtD1B,UAAW2B,EAAAA,GAAGR,EAAgB,GAAIR,EAAmB,MAARL,GAAeQ,EAAcd,GAC1E4B,OAAwB,iBAAT1B,EAAoBA,EAAOX,EAAQW,GAClD2B,MAAuB,iBAAT3B,EAAoBA,EAAOX,EAAQW,GACjDM,KAAMA,GACLO,EAAiBN,EAAO,CACzBqB,QAAS,cACMN,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,kRACHzB,KAAM,iBACSkB,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,gYACHzB,KAAM,iBACSkB,EAAMC,cAAc,OAAQ,CAC3CM,EAAG,+YACHzB,KAAM,iBAEV,SACAT,EAAKmC,YAAc,OACnBnC,EAAKoC,SAAU,EACfpC,EAAKqC,UAAY,CACf5B,KAAM6B,EAAS1C,QAAC2C,OAChBlC,KAAMiC,EAAS1C,QAAC4C,UAAU,CAACF,EAAS1C,QAAC6C,OAAQH,EAAAA,QAAUC,SACvDpC,UAAWmC,EAAS1C,QAAC2C"}