import { Request, Response, NextFunction } from "express";
import { z, AnyZodObject } from "zod";
export declare const SomeExpressRequest: z.ZodObject<{
    headers: z.ZodOptional<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
    params: z.ZodOptional<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
    query: z.ZodOptional<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
    body: z.ZodOptional<z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>>;
}, "strip", z.ZodTypeAny, {
    headers?: {} | undefined;
    params?: {} | undefined;
    query?: {} | undefined;
    body?: {} | undefined;
}, {
    headers?: {} | undefined;
    params?: {} | undefined;
    query?: {} | undefined;
    body?: {} | undefined;
}>;
export default function validateRequestSchema(schema: AnyZodObject): (req: Request, res: Response, next: NextFunction) => Promise<void>;
//# sourceMappingURL=validateRequestSchema.d.ts.map