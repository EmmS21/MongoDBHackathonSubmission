"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SomeExpressRequest = void 0;
const zod_1 = require("zod");
const zod_error_1 = require("zod-error");
const utils_1 = require("../utils");
exports.SomeExpressRequest = zod_1.z.object({
    headers: zod_1.z.object({}).optional(),
    params: zod_1.z.object({}).optional(),
    query: zod_1.z.object({}).optional(),
    body: zod_1.z.object({}).optional(),
});
function generateZodErrorMessage(error) {
    return (0, zod_error_1.generateErrorMessage)(error.issues, {
        delimiter: {
            error: "\n",
        },
    });
}
function validateRequestSchema(schema) {
    schema = exports.SomeExpressRequest.merge(schema);
    return async (req, res, next) => {
        const result = await schema.safeParseAsync(req);
        if (result.success) {
            return next();
        }
        const reqId = (0, utils_1.getRequestId)(req);
        const message = generateZodErrorMessage(result.error);
        (0, utils_1.logRequest)({
            reqId,
            message,
        });
        (0, utils_1.sendErrorResponse)({
            reqId,
            res,
            httpStatus: 400,
            errorMessage: "Invalid request",
        });
    };
}
exports.default = validateRequestSchema;
//# sourceMappingURL=validateRequestSchema.js.map