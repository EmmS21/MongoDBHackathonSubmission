import { IndexPath } from './indexPath';
import { BaseOptions } from './options';
export declare type MapOptions<T, U> = BaseOptions<T> & {
    /**
     * Transform the node into a different value.
     */
    transform: (node: T, transformedChildren: U[], indexPath: IndexPath) => U;
};
/**
 * Map each node into a new node.
 *
 * The shape of the tree remains the same. You can omit nodes from the tree by
 * filtering them out of the `transformedChildren` argument. The root can't be omitted.
 */
export declare function map<T, U>(node: T, options: MapOptions<T, U>): U;
