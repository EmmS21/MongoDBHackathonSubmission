/// <reference types="react" />
import { useConversation } from "./useConversation";
import { ConversationFetchOptions } from "./services/conversations";
export type UseChatbotProps = {
    chatbotName?: string;
    isExperimental?: boolean;
    maxInputCharacters?: number;
    maxCommentCharacters?: number;
    serverBaseUrl?: string;
    shouldStream?: boolean;
    suggestedPrompts?: string[];
    fetchOptions?: ConversationFetchOptions;
};
export type ChatbotData = {
    awaitingReply: boolean;
    canSubmit: (text: string) => boolean;
    chatbotName?: string;
    closeChat: () => boolean;
    conversation: ReturnType<typeof useConversation>;
    handleSubmit: (text: string) => void | Promise<void>;
    inputBarRef: React.RefObject<HTMLFormElement>;
    inputText: string;
    inputTextError: string;
    isExperimental: boolean;
    maxInputCharacters?: number;
    maxCommentCharacters?: number;
    open: boolean;
    openChat: () => void;
    setInputText: (text: string) => void;
};
export declare function useChatbot(props: UseChatbotProps): ChatbotData;
