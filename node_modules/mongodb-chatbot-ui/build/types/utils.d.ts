/**
 * Immutable update of an array element at a given array index.
 *
 * @param arr - the array to update
 * @param index - the index of the element to update
 * @param value - the new value of the element
 */
export declare function updateArrayElementAt<T>(arr: T[], index: number, value: T): T[];
/**
 * Immutable removal of an array element at a given array index.
 * @param arr - the array to update
 * @param index - the index of the element to remove
 * @throws if the index is out of bounds
 */
export declare function removeArrayElementAt<T>(arr: T[], index: number): T[];
/**
 * Counts all occurences of a regular expression in a given string
 * @param regex - the pattern to count
 * @param str - the test string on which to evaluate the regex
 */
export declare function countRegexMatches(regex: RegExp, str: string): number;
/**
 * Checks if the browser supports Server-Sent Events.
 * @returns true if the browser supports Server-Sent Events, false otherwise
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events
 * @see https://caniuse.com/eventsource
 */
export declare const canUseServerSentEvents: () => boolean;
/**
 * A shared interface for Emotion CSS tag constructors.
 * @see https://emotion.sh/docs/typescript#css-tag
 */
export interface StylesProps {
    darkMode?: boolean;
}
/**
 * Adds additional query params to a url while preserving any existing params.
 *
 * @param url - The url to add the query params to
 * @param params - An object of params to add that maps param keys to values.
 * @returns - The url with the query params added
 */
export declare function addQueryParams(url: string, params: Record<string, string | undefined>): string;
