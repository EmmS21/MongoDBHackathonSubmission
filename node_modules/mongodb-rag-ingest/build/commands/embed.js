"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doEmbedCommand = void 0;
const updateEmbeddedContent_1 = require("../embed/updateEmbeddedContent");
const withConfig_1 = require("../withConfig");
const commandModule = {
    command: "embed",
    builder(args) {
        return (0, withConfig_1.withConfigOptions)(args)
            .string("since")
            .option("source", {
            string: true,
            description: "A source name to load. If unspecified, loads all sources.",
        })
            .demandOption("since");
    },
    async handler({ since: sinceString, source, ...args }) {
        if (isNaN(Date.parse(sinceString))) {
            throw new Error(`The value for 'since' (${sinceString}) must be a valid JavaScript date string.`);
        }
        const since = new Date(sinceString);
        return (0, withConfig_1.withConfig)(exports.doEmbedCommand, { ...args, since, source });
    },
    describe: "Update embedded content data from pages",
};
exports.default = commandModule;
const doEmbedCommand = async ({ pageStore, embeddedContentStore, embedder, chunkOptions }, { since, source, }) => {
    const sourceNames = source === undefined
        ? undefined
        : Array.isArray(source)
            ? source
            : [source];
    await (0, updateEmbeddedContent_1.updateEmbeddedContent)({
        since,
        sourceNames,
        pageStore,
        embeddedContentStore,
        embedder,
        chunkOptions,
    });
};
exports.doEmbedCommand = doEmbedCommand;
//# sourceMappingURL=embed.js.map