import { Page } from "mongodb-rag-core";
import { DataSource } from "../DataSource";
import { ProjectBase } from "../ProjectBase";
export type SnootyManifestEntry = {
    type: "page" | "timestamp" | "metadata" | "asset";
    data: unknown;
};
/**
  Represents a page entry in a Snooty manifest file.
 */
export type SnootyPageEntry = SnootyManifestEntry & {
    type: "page";
    data: SnootyPageData;
};
/**
  A node in the Snooty AST.
 */
export type SnootyNode = {
    type: string;
    children?: (SnootyNode | SnootyTextNode)[];
    options?: Record<string, unknown>;
    [key: string]: unknown;
};
/**
  A Snooty AST node with a text value.
 */
export type SnootyTextNode = SnootyNode & {
    type: "text";
    children: never;
    value: string;
};
/**
  A page in the Snooty manifest.
 */
export type SnootyPageData = {
    page_id: string;
    ast: SnootyNode;
    tags?: string[];
    deleted: boolean;
};
export type SnootyProjectConfig = ProjectBase & {
    type: "snooty";
    /**
      Git branch name for the current (search indexed) version of the site.
      @example "v4.10"
     */
    currentBranch: string;
    /**
      The base URL of pages within the project site.
     */
    baseUrl: string;
};
/**
  Specifies a locally-overrideable Snooty project configuration.

  `baseUrl` and `currentBranch`, if undefined, will be filled in by the Snooty
  Data API GET projects endpoint. You can set them yourself to override the data
  in the Snooty Data API. `currentBranch` will be the name of the first branch
  entry with `isStableBranch` set to true in the Data API response.
 */
export type LocallySpecifiedSnootyProjectConfig = Omit<SnootyProjectConfig, "baseUrl" | "currentBranch" | "version"> & {
    baseUrl?: string;
    currentBranch?: string;
    versionNameOverride?: string;
};
export type MakeSnootyDataSourceArgs = {
    /**
      The data source name.
     */
    name: string;
    /**
      The configuration for the Snooty project.
     */
    project: SnootyProjectConfig;
    /**
      The base URL for Snooty Data API requests.
     */
    snootyDataApiBaseUrl: string;
    version?: string;
};
export declare const makeSnootyDataSource: ({ name: sourceName, project, snootyDataApiBaseUrl, }: MakeSnootyDataSourceArgs) => DataSource & {
    _baseUrl: string;
    _currentBranch: string;
    _snootyProjectName: string;
    _version?: string;
};
/**
  Branch with site
 */
export interface Branch {
    /**
      Name of git branch
      @example "master"
     */
    gitBranchName: string;
    /**
      Whether or not the branch is active.
      @example true
     */
    active: boolean;
    /**
      Base URL of the site
      @example "https://mongodb.com/docs/kotlin/coroutine/upcoming"
     */
    fullUrl: string;
    /**
      Whether this is the 'current, active branch' (rather than a previous or
      upcoming version).
     */
    isStableBranch: boolean;
}
export interface SnootyProject {
    /**
      Snooty repo name
      @example "docs-kotlin"
     */
    repoName: string;
    /**
      Snooty project name
      @example "kotlin"
     */
    project: string;
    /**
      Branches of repo that correspond to a site
     */
    branches: Branch[];
}
export declare const handlePage: (page: SnootyPageData, { sourceName, baseUrl, tags: tagsIn, productName, version, }: {
    sourceName: string;
    baseUrl: string;
    tags: string[];
    productName?: string | undefined;
    version?: string | undefined;
}) => Promise<Page>;
//# sourceMappingURL=SnootyDataSource.d.ts.map