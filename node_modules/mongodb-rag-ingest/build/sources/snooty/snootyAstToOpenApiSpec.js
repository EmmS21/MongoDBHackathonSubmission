"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTitleFromSnootyOpenApiSpecAst = exports.snootyAstToOpenApiSpec = void 0;
const yaml_1 = __importDefault(require("yaml"));
const snootyAstToOpenApiSpec = async (node) => {
    if (node.name === "openapi") {
        if (node.children &&
            node.children.length > 0 &&
            node.children[0].type === "text") {
            const jsonSpecString = node.children[0].value;
            const text = yaml_1.default.stringify(JSON.parse(jsonSpecString));
            return cleanSpec(text);
            // Have to hard code how the Atlas OpenAPI spec is loaded for now.
            // There is no programmatic way to get the spec resource from the Snooty AST.
        }
        else if (node?.options?.source_type === "atlas") {
            const version = node?.options?.["api-version"] || "2.0";
            const data = await fetch("https://cloud.mongodb.com/api/openapi/spec/" + version);
            const json = await data.json();
            const text = yaml_1.default.stringify(json);
            const cleanedSpec = cleanSpec(text);
            return cleanedSpec;
        }
        else {
            return "";
        }
    }
    const promises = node.children?.map(async (childNode) => (0, exports.snootyAstToOpenApiSpec)(childNode)) || [new Promise((resolve) => resolve(""))];
    return (await Promise.all(promises)).join("") || "";
};
exports.snootyAstToOpenApiSpec = snootyAstToOpenApiSpec;
function cleanSpec(spec) {
    return spec
        .replaceAll("\n\n", "\n") // remove unnecessary double newlines
        .replaceAll(/\[([^[\]]+?)\]\(.*?\)/g, (_, text) => text); // replace markdown links with just the text
}
const getTitleFromSnootyOpenApiSpecAst = (node) => {
    if (node.options?.template === "openapi") {
        return node.options?.title;
    }
    return (node.children
        ?.map((childNode) => (0, exports.snootyAstToOpenApiSpec)(childNode))
        .join("") || "");
};
exports.getTitleFromSnootyOpenApiSpecAst = getTitleFromSnootyOpenApiSpecAst;
//# sourceMappingURL=snootyAstToOpenApiSpec.js.map