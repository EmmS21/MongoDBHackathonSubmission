"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeMongoDbUniversityDataApiClient = void 0;
const node_fetch_1 = __importDefault(require("node-fetch"));
/**
  Construct a {@link MongoDbUniversityDataApiClient}.
 */
function makeMongoDbUniversityDataApiClient({ baseUrl, apiKey, }) {
    const headers = {
        "X-API-KEY": apiKey,
    };
    return {
        async getAllCatalogItems() {
            const response = await (0, node_fetch_1.default)(`${baseUrl}/ti`, {
                headers,
            });
            const json = await response.json();
            return json;
        },
        async getAllVideos() {
            let offset = 0;
            const LIMIT = 300; // Maximum allowed by the MongoDB University Data API.
            let hasMoreVideos = true;
            const videos = [];
            let metadata = undefined;
            while (hasMoreVideos === true) {
                const response = await (0, node_fetch_1.default)(`${baseUrl}/videos?limit=${LIMIT}&offset=${offset}`, {
                    headers,
                });
                const { data, metadata: resMetadata } = (await response.json());
                hasMoreVideos = resMetadata.has_more;
                offset += LIMIT;
                videos.push(...data);
                metadata = resMetadata;
            }
            return { data: videos, metadata };
        },
    };
}
exports.makeMongoDbUniversityDataApiClient = makeMongoDbUniversityDataApiClient;
//# sourceMappingURL=MongoDbUniversityDataApiClient.js.map